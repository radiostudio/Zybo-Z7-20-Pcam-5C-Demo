-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1101_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgRgb_dout : IN STD_LOGIC_VECTOR (119 downto 0);
    imgRgb_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    imgRgb_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    imgRgb_empty_n : IN STD_LOGIC;
    imgRgb_read : OUT STD_LOGIC;
    imgUnzip_din : OUT STD_LOGIC_VECTOR (119 downto 0);
    imgUnzip_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    imgUnzip_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    imgUnzip_full_n : IN STD_LOGIC;
    imgUnzip_write : OUT STD_LOGIC;
    p_0_0_0477_3715_lcssa749825 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0478_3713_lcssa747823 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0479_3717_lcssa745821 : IN STD_LOGIC_VECTOR (9 downto 0);
    conv2_i_i_3_lcssa819 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0477_2709_lcssa742817 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0478_2707_lcssa740815 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0479_2711_lcssa738813 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0477_1703_lcssa735809 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0478_1701_lcssa733807 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0479_1705_lcssa731805 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0477697_lcssa728801 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0478695_lcssa726799 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0479699_lcssa724797 : IN STD_LOGIC_VECTOR (9 downto 0);
    loopWidth : IN STD_LOGIC_VECTOR (16 downto 0);
    zext_ln1085 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_0_0_0480_7748_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0480_7748_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0481_7746_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0481_7746_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0482_7744_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0482_7744_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0483_7743_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0483_7743_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0477_2709741_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0477_2709741_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0478_2707739_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0478_2707739_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0479_2711737_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0479_2711737_out_ap_vld : OUT STD_LOGIC;
    conv2_i_i_2736_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    conv2_i_i_2736_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv2_i_i_2736_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0477_1703734_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0477_1703734_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0478_1701732_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0478_1701732_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0479_1705730_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0479_1705730_out_ap_vld : OUT STD_LOGIC;
    conv2_i_i_1729_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    conv2_i_i_1729_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv2_i_i_1729_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0477697727_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0477697727_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0478695725_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0478695725_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0479699723_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0479699723_out_ap_vld : OUT STD_LOGIC;
    conv2_i_i722_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    conv2_i_i722_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv2_i_i722_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0480_7721_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0480_7721_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0480_7721_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0481_7720_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0481_7720_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0481_7720_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0482_7719_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0482_7719_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0482_7719_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0483_7718_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0483_7718_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0483_7718_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of system_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1101_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv17_4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln1101_reg_2064 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1107_reg_2068 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op72_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln1159_reg_2072 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1159_reg_2072_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1101_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal imgRgb_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal imgUnzip_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1101_reg_2064_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1101_reg_2064_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1101_reg_2064_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1107_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1107_reg_2068_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1107_reg_2068_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1159_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1159_reg_2072_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1159_reg_2072_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1159_reg_2072_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_0_0482_7744_load_reg_2076 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0482_7744_load_reg_2076_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0480_7748_load_reg_2085 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0480_7748_load_reg_2085_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479699723_load_reg_2094 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479699723_load_reg_2094_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479699723_load_reg_2094_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477697727_load_reg_2102 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477697727_load_reg_2102_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477697727_load_reg_2102_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_fu_461_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_reg_2110 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_3_reg_2115 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_3_reg_2115_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_4_reg_2120 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_5_reg_2125 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_6_reg_2130 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_6_reg_2130_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_7_reg_2135 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_8_reg_2140 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1109_9_reg_2145 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0481_7746_load_reg_2150 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0478695725_load_reg_2159 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0478695725_load_reg_2159_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479_1705730_load_reg_2167 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477_1703734_load_reg_2175 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479_2711737_load_reg_2183 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477_2709741_load_reg_2191 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479699723_load_1_reg_2199 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0479699723_load_1_reg_2199_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477697727_load_1_reg_2204 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0477697727_load_1_reg_2204_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1129_fu_677_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1129_reg_2209 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1129_9_fu_711_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1129_9_reg_2214 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_0_0_0478_1701732_load_reg_2219 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0478_2707739_load_reg_2227 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0478695725_load_1_reg_2235 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_reg_2240 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1129_3_fu_830_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1129_3_reg_2245 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1129_6_fu_864_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1129_6_reg_2250 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1132_3_reg_2255 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1144_fu_1275_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_reg_2260 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_1_fu_1282_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_1_reg_2265 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_2_fu_1289_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_2_reg_2270 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_3_fu_1452_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_3_reg_2275 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_4_fu_1459_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_4_reg_2280 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_5_fu_1466_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_5_reg_2285 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_6_fu_1629_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_6_reg_2290 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_7_fu_1636_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_7_reg_2295 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_8_fu_1643_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_8_reg_2300 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_9_fu_1806_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_9_reg_2305 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_10_fu_1813_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_10_reg_2310 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_11_fu_1820_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1144_11_reg_2315 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_exit_pp0_iter4_stage0 : STD_LOGIC;
    signal zext_ln1132_2_fu_1073_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1132_1_fu_1016_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1132_fu_960_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_fu_184 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal x_3_fu_438_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_0_0_0482_7744_fu_188 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0481_7746_fu_192 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0480_7748_fu_196 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0479699723_fu_200 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0478695725_fu_204 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0477697727_fu_208 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0479_1705730_fu_212 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0478_1701732_fu_216 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0477_1703734_fu_220 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0479_2711737_fu_224 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0478_2707739_fu_228 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0477_2709741_fu_232 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal p_0_0_0483_7743_fu_236 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal zext_ln1132_3_fu_1077_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1085_cast_fu_343_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_649_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_663_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1129_7_fu_673_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1129_4_fu_659_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_683_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_697_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1129_19_fu_707_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1129_16_fu_693_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1129_1_fu_749_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1129_2_fu_763_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1129_fu_777_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1129_5_fu_759_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1129_1_fu_780_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1129_6_fu_773_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lum_fu_786_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_802_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_816_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1129_11_fu_826_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1129_8_fu_812_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_836_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_850_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1129_15_fu_860_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1129_12_fu_846_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1129_3_fu_870_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1129_4_fu_884_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1129_3_fu_898_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1129_17_fu_880_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1129_10_fu_901_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1129_18_fu_894_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lum_3_fu_907_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1129_5_fu_963_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1129_6_fu_977_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1129_1_fu_991_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1129_9_fu_973_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1129_4_fu_994_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1129_10_fu_987_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lum_1_fu_1000_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1132_1_fu_1006_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln1129_9_fu_1020_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1129_s_fu_1034_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1129_2_fu_1048_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1129_13_fu_1030_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1129_7_fu_1051_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1129_14_fu_1044_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lum_2_fu_1057_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1132_2_fu_1063_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1144_1_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1144_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1144_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1144_2_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1144_1_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1144_3_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_1131_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_1_fu_1138_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_3_fu_1145_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1147_fu_1149_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_4_fu_1155_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1147_2_fu_1141_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1147_1_fu_1159_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1_fu_1178_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_1_fu_1185_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_3_fu_1192_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1148_fu_1196_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_4_fu_1202_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1148_2_fu_1188_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1148_1_fu_1206_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2_fu_1225_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_1_fu_1232_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_3_fu_1239_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1149_fu_1243_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_4_fu_1249_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1149_2_fu_1235_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1149_1_fu_1253_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln1144_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1144_1_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1144_3_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_s_fu_1259_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_s_fu_1212_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_s_fu_1165_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1144_4_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1144_2_fu_1302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1144_5_fu_1308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1144_2_fu_1314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1144_3_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1147_1_fu_1332_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_5_fu_1339_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_fu_1128_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1147_2_fu_1346_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_7_fu_1352_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1147_6_fu_1342_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1147_3_fu_1356_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1148_1_fu_1372_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_5_fu_1379_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_fu_1175_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1148_2_fu_1386_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_7_fu_1392_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1148_6_fu_1382_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1148_3_fu_1396_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1149_1_fu_1412_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_5_fu_1419_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_fu_1222_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1149_2_fu_1426_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_7_fu_1432_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1149_6_fu_1422_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1149_3_fu_1436_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1144_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_1_fu_1442_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_1_fu_1402_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_1_fu_1362_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1144_6_fu_1473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1144_3_fu_1479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1144_7_fu_1485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1144_4_fu_1491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1144_5_fu_1497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1147_2_fu_1509_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_8_fu_1516_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1147_4_fu_1523_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_10_fu_1529_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1147_9_fu_1519_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1147_5_fu_1533_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1148_2_fu_1549_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_8_fu_1556_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1148_4_fu_1563_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_10_fu_1569_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1148_9_fu_1559_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1148_5_fu_1573_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1149_2_fu_1589_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_8_fu_1596_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1149_4_fu_1603_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_10_fu_1609_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1149_9_fu_1599_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1149_5_fu_1613_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1144_1_fu_1503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_2_fu_1619_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_2_fu_1579_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_2_fu_1539_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1144_8_fu_1650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1144_4_fu_1656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1144_9_fu_1662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1144_6_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1144_7_fu_1674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1147_3_fu_1686_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_11_fu_1693_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1147_6_fu_1700_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1147_13_fu_1706_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1147_12_fu_1696_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1147_7_fu_1710_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1148_3_fu_1726_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_11_fu_1733_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1148_6_fu_1740_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1148_13_fu_1746_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1148_12_fu_1736_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1148_7_fu_1750_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1149_3_fu_1766_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_11_fu_1773_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1149_6_fu_1780_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1149_13_fu_1786_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1149_12_fu_1776_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1149_7_fu_1790_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1144_2_fu_1680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_3_fu_1796_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_3_fu_1756_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_3_fu_1716_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1358 : BOOLEAN;
    signal ap_condition_1362 : BOOLEAN;
    signal ap_condition_1366 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component system_v_demosaic_0_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component system_v_demosaic_0_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0)) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    p_0_0_0477697727_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_0_0477697727_fu_208 <= p_0_0_0477697_lcssa728801;
                elsif ((ap_const_boolean_1 = ap_condition_1358)) then 
                    p_0_0_0477697727_fu_208 <= imgRgb_dout(19 downto 10);
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0477_1703734_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0477_1703734_fu_220 <= p_0_0_0477_1703_lcssa735809;
                elsif ((ap_const_boolean_1 = ap_condition_1362)) then 
                    p_0_0_0477_1703734_fu_220 <= trunc_ln1109_4_reg_2120;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0477_2709741_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0477_2709741_fu_232 <= p_0_0_0477_2709_lcssa742817;
                elsif ((ap_const_boolean_1 = ap_condition_1362)) then 
                    p_0_0_0477_2709741_fu_232 <= trunc_ln1109_7_reg_2135;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0478695725_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0478695725_fu_204 <= p_0_0_0478695_lcssa726799;
                elsif ((ap_const_boolean_1 = ap_condition_1362)) then 
                    p_0_0_0478695725_fu_204 <= trunc_ln1109_reg_2110;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0478_1701732_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0478_1701732_fu_216 <= p_0_0_0478_1701_lcssa733807;
                elsif ((ap_const_boolean_1 = ap_condition_1366)) then 
                    p_0_0_0478_1701732_fu_216 <= trunc_ln1109_3_reg_2115_pp0_iter2_reg;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0478_2707739_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0478_2707739_fu_228 <= p_0_0_0478_2707_lcssa740815;
                elsif ((ap_const_boolean_1 = ap_condition_1366)) then 
                    p_0_0_0478_2707739_fu_228 <= trunc_ln1109_6_reg_2130_pp0_iter2_reg;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0479699723_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_0_0479699723_fu_200 <= p_0_0_0479699_lcssa724797;
                elsif ((ap_const_boolean_1 = ap_condition_1358)) then 
                    p_0_0_0479699723_fu_200 <= imgRgb_dout(29 downto 20);
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0479_1705730_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0479_1705730_fu_212 <= p_0_0_0479_1705_lcssa731805;
                elsif ((ap_const_boolean_1 = ap_condition_1362)) then 
                    p_0_0_0479_1705730_fu_212 <= trunc_ln1109_5_reg_2125;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0479_2711737_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0479_2711737_fu_224 <= p_0_0_0479_2711_lcssa738813;
                elsif ((ap_const_boolean_1 = ap_condition_1362)) then 
                    p_0_0_0479_2711737_fu_224 <= trunc_ln1109_8_reg_2140;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0480_7748_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_0_0480_7748_fu_196 <= p_0_0_0477_3715_lcssa749825;
                elsif ((ap_const_boolean_1 = ap_condition_1358)) then 
                    p_0_0_0480_7748_fu_196 <= imgRgb_dout(109 downto 100);
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0481_7746_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0481_7746_fu_192 <= p_0_0_0478_3713_lcssa747823;
                elsif ((ap_const_boolean_1 = ap_condition_1362)) then 
                    p_0_0_0481_7746_fu_192 <= trunc_ln1109_9_reg_2145;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0482_7744_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_0_0482_7744_fu_188 <= p_0_0_0479_3717_lcssa745821;
                elsif ((ap_const_boolean_1 = ap_condition_1358)) then 
                    p_0_0_0482_7744_fu_188 <= imgRgb_dout(119 downto 110);
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0483_7743_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0483_7743_fu_236 <= conv2_i_i_3_lcssa819;
                elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
                    p_0_0_0483_7743_fu_236 <= zext_ln1132_3_fu_1077_p1;
                end if;
            end if; 
        end if;
    end process;

    x_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln1101_fu_420_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    x_fu_184 <= x_3_fu_438_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_184 <= ap_const_lv17_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1129_3_reg_2245 <= add_ln1129_3_fu_830_p2;
                add_ln1129_6_reg_2250 <= add_ln1129_6_fu_864_p2;
                add_ln1129_9_reg_2214 <= add_ln1129_9_fu_711_p2;
                add_ln1129_reg_2209 <= add_ln1129_fu_677_p2;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                icmp_ln1101_reg_2064_pp0_iter2_reg <= icmp_ln1101_reg_2064_pp0_iter1_reg;
                icmp_ln1101_reg_2064_pp0_iter3_reg <= icmp_ln1101_reg_2064_pp0_iter2_reg;
                icmp_ln1107_reg_2068_pp0_iter2_reg <= icmp_ln1107_reg_2068_pp0_iter1_reg;
                icmp_ln1159_reg_2072_pp0_iter2_reg <= icmp_ln1159_reg_2072_pp0_iter1_reg;
                icmp_ln1159_reg_2072_pp0_iter3_reg <= icmp_ln1159_reg_2072_pp0_iter2_reg;
                icmp_ln1159_reg_2072_pp0_iter4_reg <= icmp_ln1159_reg_2072_pp0_iter3_reg;
                lshr_ln1132_3_reg_2255 <= lum_3_fu_907_p2(9 downto 3);
                lshr_ln_reg_2240 <= lum_fu_786_p2(9 downto 3);
                p_0_0_0477697727_load_1_reg_2204 <= p_0_0_0477697727_fu_208;
                p_0_0_0477697727_load_1_reg_2204_pp0_iter3_reg <= p_0_0_0477697727_load_1_reg_2204;
                p_0_0_0477697727_load_reg_2102_pp0_iter2_reg <= p_0_0_0477697727_load_reg_2102;
                p_0_0_0477697727_load_reg_2102_pp0_iter3_reg <= p_0_0_0477697727_load_reg_2102_pp0_iter2_reg;
                p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg <= p_0_0_0477_1703734_load_reg_2175;
                p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg <= p_0_0_0477_2709741_load_reg_2191;
                p_0_0_0478695725_load_1_reg_2235 <= p_0_0_0478695725_fu_204;
                p_0_0_0478695725_load_reg_2159_pp0_iter3_reg <= p_0_0_0478695725_load_reg_2159;
                p_0_0_0479699723_load_1_reg_2199 <= p_0_0_0479699723_fu_200;
                p_0_0_0479699723_load_1_reg_2199_pp0_iter3_reg <= p_0_0_0479699723_load_1_reg_2199;
                p_0_0_0479699723_load_reg_2094_pp0_iter2_reg <= p_0_0_0479699723_load_reg_2094;
                p_0_0_0479699723_load_reg_2094_pp0_iter3_reg <= p_0_0_0479699723_load_reg_2094_pp0_iter2_reg;
                p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg <= p_0_0_0479_1705730_load_reg_2167;
                p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg <= p_0_0_0479_2711737_load_reg_2183;
                p_0_0_0480_7748_load_reg_2085_pp0_iter2_reg <= p_0_0_0480_7748_load_reg_2085;
                p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg <= p_0_0_0480_7748_load_reg_2085_pp0_iter2_reg;
                p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg <= p_0_0_0481_7746_load_reg_2150;
                p_0_0_0482_7744_load_reg_2076_pp0_iter2_reg <= p_0_0_0482_7744_load_reg_2076;
                p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg <= p_0_0_0482_7744_load_reg_2076_pp0_iter2_reg;
                select_ln1144_10_reg_2310 <= select_ln1144_10_fu_1813_p3;
                select_ln1144_11_reg_2315 <= select_ln1144_11_fu_1820_p3;
                select_ln1144_1_reg_2265 <= select_ln1144_1_fu_1282_p3;
                select_ln1144_2_reg_2270 <= select_ln1144_2_fu_1289_p3;
                select_ln1144_3_reg_2275 <= select_ln1144_3_fu_1452_p3;
                select_ln1144_4_reg_2280 <= select_ln1144_4_fu_1459_p3;
                select_ln1144_5_reg_2285 <= select_ln1144_5_fu_1466_p3;
                select_ln1144_6_reg_2290 <= select_ln1144_6_fu_1629_p3;
                select_ln1144_7_reg_2295 <= select_ln1144_7_fu_1636_p3;
                select_ln1144_8_reg_2300 <= select_ln1144_8_fu_1643_p3;
                select_ln1144_9_reg_2305 <= select_ln1144_9_fu_1806_p3;
                select_ln1144_reg_2260 <= select_ln1144_fu_1275_p3;
                trunc_ln1109_3_reg_2115_pp0_iter2_reg <= trunc_ln1109_3_reg_2115;
                trunc_ln1109_6_reg_2130_pp0_iter2_reg <= trunc_ln1109_6_reg_2130;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln1101_reg_2064 <= icmp_ln1101_fu_420_p2;
                icmp_ln1101_reg_2064_pp0_iter1_reg <= icmp_ln1101_reg_2064;
                icmp_ln1107_reg_2068 <= icmp_ln1107_fu_426_p2;
                icmp_ln1107_reg_2068_pp0_iter1_reg <= icmp_ln1107_reg_2068;
                icmp_ln1159_reg_2072 <= icmp_ln1159_fu_432_p2;
                icmp_ln1159_reg_2072_pp0_iter1_reg <= icmp_ln1159_reg_2072;
                trunc_ln1109_3_reg_2115 <= imgRgb_dout(39 downto 30);
                trunc_ln1109_4_reg_2120 <= imgRgb_dout(49 downto 40);
                trunc_ln1109_5_reg_2125 <= imgRgb_dout(59 downto 50);
                trunc_ln1109_6_reg_2130 <= imgRgb_dout(69 downto 60);
                trunc_ln1109_7_reg_2135 <= imgRgb_dout(79 downto 70);
                trunc_ln1109_8_reg_2140 <= imgRgb_dout(89 downto 80);
                trunc_ln1109_9_reg_2145 <= imgRgb_dout(99 downto 90);
                trunc_ln1109_reg_2110 <= trunc_ln1109_fu_461_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_0_0_0477697727_load_reg_2102 <= p_0_0_0477697727_fu_208;
                p_0_0_0479699723_load_reg_2094 <= p_0_0_0479699723_fu_200;
                p_0_0_0480_7748_load_reg_2085 <= p_0_0_0480_7748_fu_196;
                p_0_0_0482_7744_load_reg_2076 <= p_0_0_0482_7744_fu_188;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                p_0_0_0477_1703734_load_reg_2175 <= p_0_0_0477_1703734_fu_220;
                p_0_0_0477_2709741_load_reg_2191 <= p_0_0_0477_2709741_fu_232;
                p_0_0_0478695725_load_reg_2159 <= p_0_0_0478695725_fu_204;
                p_0_0_0479_1705730_load_reg_2167 <= p_0_0_0479_1705730_fu_212;
                p_0_0_0479_2711737_load_reg_2183 <= p_0_0_0479_2711737_fu_224;
                p_0_0_0481_7746_load_reg_2150 <= p_0_0_0481_7746_fu_192;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                p_0_0_0478_1701732_load_reg_2219 <= p_0_0_0478_1701732_fu_216;
                p_0_0_0478_2707739_load_reg_2227 <= p_0_0_0478_2707739_fu_228;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1129_10_fu_901_p2 <= std_logic_vector(unsigned(zext_ln1129_3_fu_898_p1) + unsigned(zext_ln1129_17_fu_880_p1));
    add_ln1129_1_fu_780_p2 <= std_logic_vector(unsigned(zext_ln1129_fu_777_p1) + unsigned(zext_ln1129_5_fu_759_p1));
    add_ln1129_3_fu_830_p2 <= std_logic_vector(unsigned(zext_ln1129_11_fu_826_p1) + unsigned(zext_ln1129_8_fu_812_p1));
    add_ln1129_4_fu_994_p2 <= std_logic_vector(unsigned(zext_ln1129_1_fu_991_p1) + unsigned(zext_ln1129_9_fu_973_p1));
    add_ln1129_6_fu_864_p2 <= std_logic_vector(unsigned(zext_ln1129_15_fu_860_p1) + unsigned(zext_ln1129_12_fu_846_p1));
    add_ln1129_7_fu_1051_p2 <= std_logic_vector(unsigned(zext_ln1129_2_fu_1048_p1) + unsigned(zext_ln1129_13_fu_1030_p1));
    add_ln1129_9_fu_711_p2 <= std_logic_vector(unsigned(zext_ln1129_19_fu_707_p1) + unsigned(zext_ln1129_16_fu_693_p1));
    add_ln1129_fu_677_p2 <= std_logic_vector(unsigned(zext_ln1129_7_fu_673_p1) + unsigned(zext_ln1129_4_fu_659_p1));
    add_ln1147_1_fu_1159_p2 <= std_logic_vector(unsigned(zext_ln1147_4_fu_1155_p1) + unsigned(zext_ln1147_2_fu_1141_p1));
    add_ln1147_2_fu_1346_p2 <= std_logic_vector(unsigned(zext_ln1147_5_fu_1339_p1) + unsigned(zext_ln1147_fu_1128_p1));
    add_ln1147_3_fu_1356_p2 <= std_logic_vector(unsigned(zext_ln1147_7_fu_1352_p1) + unsigned(zext_ln1147_6_fu_1342_p1));
    add_ln1147_4_fu_1523_p2 <= std_logic_vector(unsigned(zext_ln1147_8_fu_1516_p1) + unsigned(zext_ln1147_1_fu_1138_p1));
    add_ln1147_5_fu_1533_p2 <= std_logic_vector(unsigned(zext_ln1147_10_fu_1529_p1) + unsigned(zext_ln1147_9_fu_1519_p1));
    add_ln1147_6_fu_1700_p2 <= std_logic_vector(unsigned(zext_ln1147_11_fu_1693_p1) + unsigned(zext_ln1147_5_fu_1339_p1));
    add_ln1147_7_fu_1710_p2 <= std_logic_vector(unsigned(zext_ln1147_13_fu_1706_p1) + unsigned(zext_ln1147_12_fu_1696_p1));
    add_ln1147_fu_1149_p2 <= std_logic_vector(unsigned(zext_ln1147_1_fu_1138_p1) + unsigned(zext_ln1147_3_fu_1145_p1));
    add_ln1148_1_fu_1206_p2 <= std_logic_vector(unsigned(zext_ln1148_4_fu_1202_p1) + unsigned(zext_ln1148_2_fu_1188_p1));
    add_ln1148_2_fu_1386_p2 <= std_logic_vector(unsigned(zext_ln1148_5_fu_1379_p1) + unsigned(zext_ln1148_fu_1175_p1));
    add_ln1148_3_fu_1396_p2 <= std_logic_vector(unsigned(zext_ln1148_7_fu_1392_p1) + unsigned(zext_ln1148_6_fu_1382_p1));
    add_ln1148_4_fu_1563_p2 <= std_logic_vector(unsigned(zext_ln1148_8_fu_1556_p1) + unsigned(zext_ln1148_1_fu_1185_p1));
    add_ln1148_5_fu_1573_p2 <= std_logic_vector(unsigned(zext_ln1148_10_fu_1569_p1) + unsigned(zext_ln1148_9_fu_1559_p1));
    add_ln1148_6_fu_1740_p2 <= std_logic_vector(unsigned(zext_ln1148_11_fu_1733_p1) + unsigned(zext_ln1148_5_fu_1379_p1));
    add_ln1148_7_fu_1750_p2 <= std_logic_vector(unsigned(zext_ln1148_13_fu_1746_p1) + unsigned(zext_ln1148_12_fu_1736_p1));
    add_ln1148_fu_1196_p2 <= std_logic_vector(unsigned(zext_ln1148_1_fu_1185_p1) + unsigned(zext_ln1148_3_fu_1192_p1));
    add_ln1149_1_fu_1253_p2 <= std_logic_vector(unsigned(zext_ln1149_4_fu_1249_p1) + unsigned(zext_ln1149_2_fu_1235_p1));
    add_ln1149_2_fu_1426_p2 <= std_logic_vector(unsigned(zext_ln1149_5_fu_1419_p1) + unsigned(zext_ln1149_fu_1222_p1));
    add_ln1149_3_fu_1436_p2 <= std_logic_vector(unsigned(zext_ln1149_7_fu_1432_p1) + unsigned(zext_ln1149_6_fu_1422_p1));
    add_ln1149_4_fu_1603_p2 <= std_logic_vector(unsigned(zext_ln1149_8_fu_1596_p1) + unsigned(zext_ln1149_1_fu_1232_p1));
    add_ln1149_5_fu_1613_p2 <= std_logic_vector(unsigned(zext_ln1149_10_fu_1609_p1) + unsigned(zext_ln1149_9_fu_1599_p1));
    add_ln1149_6_fu_1780_p2 <= std_logic_vector(unsigned(zext_ln1149_11_fu_1773_p1) + unsigned(zext_ln1149_5_fu_1419_p1));
    add_ln1149_7_fu_1790_p2 <= std_logic_vector(unsigned(zext_ln1149_13_fu_1786_p1) + unsigned(zext_ln1149_12_fu_1776_p1));
    add_ln1149_fu_1243_p2 <= std_logic_vector(unsigned(zext_ln1149_1_fu_1232_p1) + unsigned(zext_ln1149_3_fu_1239_p1));
    and_ln1144_1_fu_1122_p2 <= (xor_ln1144_1_fu_1110_p2 and icmp_ln1144_3_fu_1116_p2);
    and_ln1144_2_fu_1314_p2 <= (xor_ln1144_2_fu_1302_p2 and icmp_ln1144_3_fu_1116_p2);
    and_ln1144_3_fu_1320_p2 <= (xor_ln1144_fu_1092_p2 and icmp_ln1144_5_fu_1308_p2);
    and_ln1144_4_fu_1491_p2 <= (xor_ln1144_3_fu_1479_p2 and icmp_ln1144_5_fu_1308_p2);
    and_ln1144_5_fu_1497_p2 <= (xor_ln1144_2_fu_1302_p2 and icmp_ln1144_7_fu_1485_p2);
    and_ln1144_6_fu_1668_p2 <= (xor_ln1144_4_fu_1656_p2 and icmp_ln1144_7_fu_1485_p2);
    and_ln1144_7_fu_1674_p2 <= (xor_ln1144_3_fu_1479_p2 and icmp_ln1144_9_fu_1662_p2);
    and_ln1144_fu_1098_p2 <= (xor_ln1144_fu_1092_p2 and icmp_ln1144_fu_1080_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_block_state2_pp0_stage0_iter1, ap_block_state6_pp0_stage0_iter5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_pp0_stage0_iter5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_block_state2_pp0_stage0_iter1, ap_block_state6_pp0_stage0_iter5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_pp0_stage0_iter5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_block_state2_pp0_stage0_iter1, ap_block_state6_pp0_stage0_iter5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_pp0_stage0_iter5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(imgRgb_empty_n, ap_predicate_op72_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op72_read_state2 = ap_const_boolean_1) and (imgRgb_empty_n = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage0_iter5_assign_proc : process(imgUnzip_full_n, icmp_ln1159_reg_2072_pp0_iter4_reg)
    begin
                ap_block_state6_pp0_stage0_iter5 <= ((icmp_ln1159_reg_2072_pp0_iter4_reg = ap_const_lv1_0) and (imgUnzip_full_n = ap_const_logic_0));
    end process;


    ap_condition_1358_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1101_reg_2064, icmp_ln1107_reg_2068)
    begin
                ap_condition_1358 <= ((icmp_ln1107_reg_2068 = ap_const_lv1_1) and (icmp_ln1101_reg_2064 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_1362_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1101_reg_2064_pp0_iter1_reg, icmp_ln1107_reg_2068_pp0_iter1_reg)
    begin
                ap_condition_1362 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1107_reg_2068_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln1101_reg_2064_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_condition_1366_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1101_reg_2064_pp0_iter2_reg, icmp_ln1107_reg_2068_pp0_iter2_reg)
    begin
                ap_condition_1366 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1107_reg_2068_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln1101_reg_2064_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1101_fu_420_p2)
    begin
        if (((icmp_ln1101_fu_420_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter4_stage0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_subdone, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_condition_exit_pp0_iter4_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter4_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op72_read_state2_assign_proc : process(icmp_ln1101_reg_2064, icmp_ln1107_reg_2068)
    begin
                ap_predicate_op72_read_state2 <= ((icmp_ln1107_reg_2068 = ap_const_lv1_1) and (icmp_ln1101_reg_2064 = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_184, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_2 <= ap_const_lv17_0;
        else 
            ap_sig_allocacmp_x_2 <= x_fu_184;
        end if; 
    end process;

    b_1_fu_1442_p4 <= add_ln1149_3_fu_1436_p2(11 downto 2);
    b_2_fu_1619_p4 <= add_ln1149_5_fu_1613_p2(11 downto 2);
    b_3_fu_1796_p4 <= add_ln1149_7_fu_1790_p2(11 downto 2);
    b_s_fu_1259_p4 <= add_ln1149_1_fu_1253_p2(11 downto 2);

    conv2_i_i722_out_o_assign_proc : process(ap_enable_reg_pp0_iter4, conv2_i_i722_out_i, ap_block_pp0_stage0, icmp_ln1101_reg_2064_pp0_iter3_reg, zext_ln1132_fu_960_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            conv2_i_i722_out_o <= zext_ln1132_fu_960_p1;
        else 
            conv2_i_i722_out_o <= conv2_i_i722_out_i;
        end if; 
    end process;


    conv2_i_i722_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            conv2_i_i722_out_o_ap_vld <= ap_const_logic_1;
        else 
            conv2_i_i722_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    conv2_i_i_1729_out_o_assign_proc : process(ap_enable_reg_pp0_iter4, conv2_i_i_1729_out_i, ap_block_pp0_stage0, icmp_ln1101_reg_2064_pp0_iter3_reg, zext_ln1132_1_fu_1016_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            conv2_i_i_1729_out_o <= zext_ln1132_1_fu_1016_p1;
        else 
            conv2_i_i_1729_out_o <= conv2_i_i_1729_out_i;
        end if; 
    end process;


    conv2_i_i_1729_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            conv2_i_i_1729_out_o_ap_vld <= ap_const_logic_1;
        else 
            conv2_i_i_1729_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    conv2_i_i_2736_out_o_assign_proc : process(ap_enable_reg_pp0_iter4, conv2_i_i_2736_out_i, ap_block_pp0_stage0, icmp_ln1101_reg_2064_pp0_iter3_reg, zext_ln1132_2_fu_1073_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            conv2_i_i_2736_out_o <= zext_ln1132_2_fu_1073_p1;
        else 
            conv2_i_i_2736_out_o <= conv2_i_i_2736_out_i;
        end if; 
    end process;


    conv2_i_i_2736_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            conv2_i_i_2736_out_o_ap_vld <= ap_const_logic_1;
        else 
            conv2_i_i_2736_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    g_1_fu_1402_p4 <= add_ln1148_3_fu_1396_p2(11 downto 2);
    g_2_fu_1579_p4 <= add_ln1148_5_fu_1573_p2(11 downto 2);
    g_3_fu_1756_p4 <= add_ln1148_7_fu_1750_p2(11 downto 2);
    g_s_fu_1212_p4 <= add_ln1148_1_fu_1206_p2(11 downto 2);
    icmp_ln1101_fu_420_p2 <= "1" when (unsigned(ap_sig_allocacmp_x_2) < unsigned(loopWidth)) else "0";
    icmp_ln1107_fu_426_p2 <= "1" when (unsigned(ap_sig_allocacmp_x_2) < unsigned(zext_ln1085_cast_fu_343_p1)) else "0";
    icmp_ln1144_1_fu_1086_p2 <= "1" when (unsigned(conv2_i_i722_out_i) < unsigned(conv2_i_i_1729_out_i)) else "0";
    icmp_ln1144_2_fu_1104_p2 <= "1" when (unsigned(p_0_0_0483_7718_out_i) < unsigned(conv2_i_i722_out_i)) else "0";
    icmp_ln1144_3_fu_1116_p2 <= "1" when (unsigned(conv2_i_i722_out_i) < unsigned(conv2_i_i_1729_out_i)) else "0";
    icmp_ln1144_4_fu_1296_p2 <= "1" when (unsigned(conv2_i_i_1729_out_i) < unsigned(conv2_i_i_2736_out_i)) else "0";
    icmp_ln1144_5_fu_1308_p2 <= "1" when (unsigned(conv2_i_i_1729_out_i) < unsigned(conv2_i_i_2736_out_i)) else "0";
    icmp_ln1144_6_fu_1473_p2 <= "1" when (unsigned(conv2_i_i_2736_out_i) < unsigned(p_0_0_0483_7743_fu_236)) else "0";
    icmp_ln1144_7_fu_1485_p2 <= "1" when (unsigned(conv2_i_i_2736_out_i) < unsigned(p_0_0_0483_7743_fu_236)) else "0";
    icmp_ln1144_8_fu_1650_p2 <= "1" when (unsigned(p_0_0_0483_7743_fu_236) < unsigned(zext_ln1132_fu_960_p1)) else "0";
    icmp_ln1144_9_fu_1662_p2 <= "1" when (unsigned(p_0_0_0483_7743_fu_236) < unsigned(zext_ln1132_fu_960_p1)) else "0";
    icmp_ln1144_fu_1080_p2 <= "1" when (unsigned(p_0_0_0483_7718_out_i) < unsigned(conv2_i_i722_out_i)) else "0";
    icmp_ln1159_fu_432_p2 <= "1" when (ap_sig_allocacmp_x_2 = ap_const_lv17_0) else "0";

    imgRgb_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, imgRgb_empty_n, ap_predicate_op72_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op72_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            imgRgb_blk_n <= imgRgb_empty_n;
        else 
            imgRgb_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgRgb_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op72_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op72_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            imgRgb_read <= ap_const_logic_1;
        else 
            imgRgb_read <= ap_const_logic_0;
        end if; 
    end process;


    imgUnzip_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, imgUnzip_full_n, icmp_ln1159_reg_2072_pp0_iter4_reg, ap_block_pp0_stage0)
    begin
        if (((icmp_ln1159_reg_2072_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            imgUnzip_blk_n <= imgUnzip_full_n;
        else 
            imgUnzip_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgUnzip_din <= (((((((((((select_ln1144_11_reg_2315 & select_ln1144_9_reg_2305) & select_ln1144_10_reg_2310) & select_ln1144_8_reg_2300) & select_ln1144_6_reg_2290) & select_ln1144_7_reg_2295) & select_ln1144_5_reg_2285) & select_ln1144_3_reg_2275) & select_ln1144_4_reg_2280) & select_ln1144_2_reg_2270) & select_ln1144_reg_2260) & select_ln1144_1_reg_2265);

    imgUnzip_write_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln1159_reg_2072_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1159_reg_2072_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            imgUnzip_write <= ap_const_logic_1;
        else 
            imgUnzip_write <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln1129_1_fu_749_p4 <= p_0_0_0478695725_fu_204(9 downto 1);
    lshr_ln1129_2_fu_763_p4 <= p_0_0_0478695725_fu_204(9 downto 3);
    lshr_ln1129_3_fu_870_p4 <= p_0_0_0481_7746_fu_192(9 downto 1);
    lshr_ln1129_4_fu_884_p4 <= p_0_0_0481_7746_fu_192(9 downto 3);
    lshr_ln1129_5_fu_963_p4 <= p_0_0_0478_1701732_fu_216(9 downto 1);
    lshr_ln1129_6_fu_977_p4 <= p_0_0_0478_1701732_fu_216(9 downto 3);
    lshr_ln1129_9_fu_1020_p4 <= p_0_0_0478_2707739_fu_228(9 downto 1);
    lshr_ln1129_s_fu_1034_p4 <= p_0_0_0478_2707739_fu_228(9 downto 3);
    lshr_ln1132_1_fu_1006_p4 <= lum_1_fu_1000_p2(9 downto 3);
    lshr_ln1132_2_fu_1063_p4 <= lum_2_fu_1057_p2(9 downto 3);
    lum_1_fu_1000_p2 <= std_logic_vector(unsigned(add_ln1129_4_fu_994_p2) + unsigned(zext_ln1129_10_fu_987_p1));
    lum_2_fu_1057_p2 <= std_logic_vector(unsigned(add_ln1129_7_fu_1051_p2) + unsigned(zext_ln1129_14_fu_1044_p1));
    lum_3_fu_907_p2 <= std_logic_vector(unsigned(add_ln1129_10_fu_901_p2) + unsigned(zext_ln1129_18_fu_894_p1));
    lum_fu_786_p2 <= std_logic_vector(unsigned(add_ln1129_1_fu_780_p2) + unsigned(zext_ln1129_6_fu_773_p1));
    or_ln1144_1_fu_1503_p2 <= (and_ln1144_5_fu_1497_p2 or and_ln1144_4_fu_1491_p2);
    or_ln1144_2_fu_1680_p2 <= (and_ln1144_7_fu_1674_p2 or and_ln1144_6_fu_1668_p2);
    or_ln1144_3_fu_1269_p2 <= (and_ln1144_fu_1098_p2 or and_ln1144_1_fu_1122_p2);
    or_ln1144_fu_1326_p2 <= (and_ln1144_3_fu_1320_p2 or and_ln1144_2_fu_1314_p2);
    p_0_0_0477697727_out <= p_0_0_0477697727_load_reg_2102_pp0_iter3_reg;

    p_0_0_0477697727_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0477697727_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0477697727_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0477_1703734_out <= p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg;

    p_0_0_0477_1703734_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0477_1703734_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0477_1703734_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0477_2709741_out <= p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg;

    p_0_0_0477_2709741_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0477_2709741_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0477_2709741_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0478695725_out <= p_0_0_0478695725_load_reg_2159_pp0_iter3_reg;

    p_0_0_0478695725_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0478695725_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0478695725_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0478_1701732_out <= p_0_0_0478_1701732_load_reg_2219;

    p_0_0_0478_1701732_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0478_1701732_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0478_1701732_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0478_2707739_out <= p_0_0_0478_2707739_load_reg_2227;

    p_0_0_0478_2707739_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0478_2707739_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0478_2707739_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0479699723_out <= p_0_0_0479699723_load_reg_2094_pp0_iter3_reg;

    p_0_0_0479699723_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0479699723_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0479699723_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0479_1705730_out <= p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg;

    p_0_0_0479_1705730_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0479_1705730_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0479_1705730_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0479_2711737_out <= p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg;

    p_0_0_0479_2711737_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0479_2711737_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0479_2711737_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0480_7721_out_o_assign_proc : process(ap_enable_reg_pp0_iter4, p_0_0_0480_7721_out_i, ap_block_pp0_stage0, icmp_ln1101_reg_2064_pp0_iter3_reg, p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            p_0_0_0480_7721_out_o <= p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg;
        else 
            p_0_0_0480_7721_out_o <= p_0_0_0480_7721_out_i;
        end if; 
    end process;


    p_0_0_0480_7721_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            p_0_0_0480_7721_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0480_7721_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0480_7748_out <= p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg;

    p_0_0_0480_7748_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0480_7748_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0480_7748_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0481_7720_out_o_assign_proc : process(ap_enable_reg_pp0_iter4, p_0_0_0481_7720_out_i, ap_block_pp0_stage0, icmp_ln1101_reg_2064_pp0_iter3_reg, p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            p_0_0_0481_7720_out_o <= p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg;
        else 
            p_0_0_0481_7720_out_o <= p_0_0_0481_7720_out_i;
        end if; 
    end process;


    p_0_0_0481_7720_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            p_0_0_0481_7720_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0481_7720_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0481_7746_out <= p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg;

    p_0_0_0481_7746_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0481_7746_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0481_7746_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0482_7719_out_o_assign_proc : process(ap_enable_reg_pp0_iter4, p_0_0_0482_7719_out_i, ap_block_pp0_stage0, icmp_ln1101_reg_2064_pp0_iter3_reg, p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            p_0_0_0482_7719_out_o <= p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg;
        else 
            p_0_0_0482_7719_out_o <= p_0_0_0482_7719_out_i;
        end if; 
    end process;


    p_0_0_0482_7719_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            p_0_0_0482_7719_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0482_7719_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0482_7744_out <= p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg;

    p_0_0_0482_7744_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0482_7744_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0482_7744_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0483_7718_out_o_assign_proc : process(ap_enable_reg_pp0_iter4, p_0_0_0483_7718_out_i, ap_block_pp0_stage0, icmp_ln1101_reg_2064_pp0_iter3_reg, p_0_0_0483_7743_fu_236)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            p_0_0_0483_7718_out_o <= p_0_0_0483_7743_fu_236;
        else 
            p_0_0_0483_7718_out_o <= p_0_0_0483_7718_out_i;
        end if; 
    end process;


    p_0_0_0483_7718_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_1))) then 
            p_0_0_0483_7718_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0483_7718_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0483_7743_out <= p_0_0_0483_7743_fu_236;

    p_0_0_0483_7743_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1101_reg_2064_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1101_reg_2064_pp0_iter3_reg = ap_const_lv1_0))) then 
            p_0_0_0483_7743_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0483_7743_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    r_1_fu_1362_p4 <= add_ln1147_3_fu_1356_p2(11 downto 2);
    r_2_fu_1539_p4 <= add_ln1147_5_fu_1533_p2(11 downto 2);
    r_3_fu_1716_p4 <= add_ln1147_7_fu_1710_p2(11 downto 2);
    r_s_fu_1165_p4 <= add_ln1147_1_fu_1159_p2(11 downto 2);
    select_ln1144_10_fu_1813_p3 <= 
        g_3_fu_1756_p4 when (or_ln1144_2_fu_1680_p2(0) = '1') else 
        p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg;
    select_ln1144_11_fu_1820_p3 <= 
        r_3_fu_1716_p4 when (or_ln1144_2_fu_1680_p2(0) = '1') else 
        p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg;
    select_ln1144_1_fu_1282_p3 <= 
        g_s_fu_1212_p4 when (or_ln1144_3_fu_1269_p2(0) = '1') else 
        p_0_0_0478695725_load_reg_2159_pp0_iter3_reg;
    select_ln1144_2_fu_1289_p3 <= 
        r_s_fu_1165_p4 when (or_ln1144_3_fu_1269_p2(0) = '1') else 
        p_0_0_0479699723_load_reg_2094_pp0_iter3_reg;
    select_ln1144_3_fu_1452_p3 <= 
        b_1_fu_1442_p4 when (or_ln1144_fu_1326_p2(0) = '1') else 
        p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg;
    select_ln1144_4_fu_1459_p3 <= 
        g_1_fu_1402_p4 when (or_ln1144_fu_1326_p2(0) = '1') else 
        p_0_0_0478_1701732_load_reg_2219;
    select_ln1144_5_fu_1466_p3 <= 
        r_1_fu_1362_p4 when (or_ln1144_fu_1326_p2(0) = '1') else 
        p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg;
    select_ln1144_6_fu_1629_p3 <= 
        b_2_fu_1619_p4 when (or_ln1144_1_fu_1503_p2(0) = '1') else 
        p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg;
    select_ln1144_7_fu_1636_p3 <= 
        g_2_fu_1579_p4 when (or_ln1144_1_fu_1503_p2(0) = '1') else 
        p_0_0_0478_2707739_load_reg_2227;
    select_ln1144_8_fu_1643_p3 <= 
        r_2_fu_1539_p4 when (or_ln1144_1_fu_1503_p2(0) = '1') else 
        p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg;
    select_ln1144_9_fu_1806_p3 <= 
        b_3_fu_1796_p4 when (or_ln1144_2_fu_1680_p2(0) = '1') else 
        p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg;
    select_ln1144_fu_1275_p3 <= 
        b_s_fu_1259_p4 when (or_ln1144_3_fu_1269_p2(0) = '1') else 
        p_0_0_0477697727_load_reg_2102_pp0_iter3_reg;
    shl_ln1147_1_fu_1332_p3 <= (p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln1147_2_fu_1509_p3 <= (p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln1147_3_fu_1686_p3 <= (p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln1148_1_fu_1372_p3 <= (p_0_0_0478_1701732_load_reg_2219 & ap_const_lv1_0);
    shl_ln1148_2_fu_1549_p3 <= (p_0_0_0478_2707739_load_reg_2227 & ap_const_lv1_0);
    shl_ln1148_3_fu_1726_p3 <= (p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln1149_1_fu_1412_p3 <= (p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln1149_2_fu_1589_p3 <= (p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln1149_3_fu_1766_p3 <= (p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln1_fu_1178_p3 <= (p_0_0_0478695725_load_reg_2159_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln2_fu_1225_p3 <= (p_0_0_0477697727_load_reg_2102_pp0_iter3_reg & ap_const_lv1_0);
    shl_ln_fu_1131_p3 <= (p_0_0_0479699723_load_reg_2094_pp0_iter3_reg & ap_const_lv1_0);
    tmp_1_fu_663_p4 <= p_0_0_0477697727_fu_208(9 downto 3);
    tmp_2_fu_802_p4 <= p_0_0_0479_1705730_fu_212(9 downto 2);
    tmp_3_fu_816_p4 <= p_0_0_0477_1703734_fu_220(9 downto 3);
    tmp_4_fu_836_p4 <= p_0_0_0479_2711737_fu_224(9 downto 2);
    tmp_5_fu_850_p4 <= p_0_0_0477_2709741_fu_232(9 downto 3);
    tmp_6_fu_683_p4 <= p_0_0_0482_7744_fu_188(9 downto 2);
    tmp_7_fu_697_p4 <= p_0_0_0480_7748_fu_196(9 downto 3);
    tmp_fu_649_p4 <= p_0_0_0479699723_fu_200(9 downto 2);
    trunc_ln1109_fu_461_p1 <= imgRgb_dout(10 - 1 downto 0);
    x_3_fu_438_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_2) + unsigned(ap_const_lv17_4));
    xor_ln1144_1_fu_1110_p2 <= (icmp_ln1144_2_fu_1104_p2 xor ap_const_lv1_1);
    xor_ln1144_2_fu_1302_p2 <= (icmp_ln1144_4_fu_1296_p2 xor ap_const_lv1_1);
    xor_ln1144_3_fu_1479_p2 <= (icmp_ln1144_6_fu_1473_p2 xor ap_const_lv1_1);
    xor_ln1144_4_fu_1656_p2 <= (icmp_ln1144_8_fu_1650_p2 xor ap_const_lv1_1);
    xor_ln1144_fu_1092_p2 <= (icmp_ln1144_1_fu_1086_p2 xor ap_const_lv1_1);
    zext_ln1085_cast_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1085),17));
    zext_ln1129_10_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1129_6_fu_977_p4),10));
    zext_ln1129_11_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_816_p4),9));
    zext_ln1129_12_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_836_p4),9));
    zext_ln1129_13_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1129_9_fu_1020_p4),10));
    zext_ln1129_14_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1129_s_fu_1034_p4),10));
    zext_ln1129_15_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_850_p4),9));
    zext_ln1129_16_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_683_p4),9));
    zext_ln1129_17_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1129_3_fu_870_p4),10));
    zext_ln1129_18_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1129_4_fu_884_p4),10));
    zext_ln1129_19_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_697_p4),9));
    zext_ln1129_1_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1129_3_reg_2245),10));
    zext_ln1129_2_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1129_6_reg_2250),10));
    zext_ln1129_3_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1129_9_reg_2214),10));
    zext_ln1129_4_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_649_p4),9));
    zext_ln1129_5_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1129_1_fu_749_p4),10));
    zext_ln1129_6_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1129_2_fu_763_p4),10));
    zext_ln1129_7_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_663_p4),9));
    zext_ln1129_8_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_802_p4),9));
    zext_ln1129_9_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1129_5_fu_963_p4),10));
    zext_ln1129_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1129_reg_2209),10));
    zext_ln1132_1_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1132_1_fu_1006_p4),10));
    zext_ln1132_2_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1132_2_fu_1063_p4),10));
    zext_ln1132_3_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1132_3_reg_2255),10));
    zext_ln1132_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_2240),10));
    zext_ln1147_10_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1147_4_fu_1523_p2),12));
    zext_ln1147_11_fu_1693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0479699723_load_1_reg_2199_pp0_iter3_reg),11));
    zext_ln1147_12_fu_1696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1147_3_fu_1686_p3),12));
    zext_ln1147_13_fu_1706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1147_6_fu_1700_p2),12));
    zext_ln1147_1_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg),11));
    zext_ln1147_2_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1131_p3),12));
    zext_ln1147_3_fu_1145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0482_7719_out_i),11));
    zext_ln1147_4_fu_1155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1147_fu_1149_p2),12));
    zext_ln1147_5_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg),11));
    zext_ln1147_6_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1147_1_fu_1332_p3),12));
    zext_ln1147_7_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1147_2_fu_1346_p2),12));
    zext_ln1147_8_fu_1516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg),11));
    zext_ln1147_9_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1147_2_fu_1509_p3),12));
    zext_ln1147_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0479699723_load_reg_2094_pp0_iter3_reg),11));
    zext_ln1148_10_fu_1569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1148_4_fu_1563_p2),12));
    zext_ln1148_11_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0478695725_load_1_reg_2235),11));
    zext_ln1148_12_fu_1736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1148_3_fu_1726_p3),12));
    zext_ln1148_13_fu_1746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1148_6_fu_1740_p2),12));
    zext_ln1148_1_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0478_1701732_load_reg_2219),11));
    zext_ln1148_2_fu_1188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_1178_p3),12));
    zext_ln1148_3_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0481_7720_out_i),11));
    zext_ln1148_4_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1148_fu_1196_p2),12));
    zext_ln1148_5_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0478_2707739_load_reg_2227),11));
    zext_ln1148_6_fu_1382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1148_1_fu_1372_p3),12));
    zext_ln1148_7_fu_1392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1148_2_fu_1386_p2),12));
    zext_ln1148_8_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg),11));
    zext_ln1148_9_fu_1559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1148_2_fu_1549_p3),12));
    zext_ln1148_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0478695725_load_reg_2159_pp0_iter3_reg),11));
    zext_ln1149_10_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1149_4_fu_1603_p2),12));
    zext_ln1149_11_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0477697727_load_1_reg_2204_pp0_iter3_reg),11));
    zext_ln1149_12_fu_1776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1149_3_fu_1766_p3),12));
    zext_ln1149_13_fu_1786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1149_6_fu_1780_p2),12));
    zext_ln1149_1_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg),11));
    zext_ln1149_2_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_1225_p3),12));
    zext_ln1149_3_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0480_7721_out_i),11));
    zext_ln1149_4_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1149_fu_1243_p2),12));
    zext_ln1149_5_fu_1419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg),11));
    zext_ln1149_6_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1149_1_fu_1412_p3),12));
    zext_ln1149_7_fu_1432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1149_2_fu_1426_p2),12));
    zext_ln1149_8_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg),11));
    zext_ln1149_9_fu_1599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1149_2_fu_1589_p3),12));
    zext_ln1149_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0477697727_load_reg_2102_pp0_iter3_reg),11));
end behav;
