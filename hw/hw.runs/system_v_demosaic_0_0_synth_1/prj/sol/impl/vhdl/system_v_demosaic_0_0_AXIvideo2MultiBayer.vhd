-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_v_demosaic_0_0_AXIvideo2MultiBayer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_video_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
    s_axis_video_TVALID : IN STD_LOGIC;
    s_axis_video_TREADY : OUT STD_LOGIC;
    s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (4 downto 0);
    s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (4 downto 0);
    s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    imgBayer_din : OUT STD_LOGIC_VECTOR (39 downto 0);
    imgBayer_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    imgBayer_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    imgBayer_full_n : IN STD_LOGIC;
    imgBayer_write : OUT STD_LOGIC;
    Height : IN STD_LOGIC_VECTOR (15 downto 0);
    WidthIn : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of system_v_demosaic_0_0_AXIvideo2MultiBayer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln145_fu_213_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln145_reg_344 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln141_1_reg_349 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_reg_unsigned_short_s_fu_242_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal rows_reg_355 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal cmp10252_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp10252_reg_363 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln188_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln188_reg_368 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln188_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln188_reg_376 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln188_fu_292_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_reg_387 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_data_out : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_data_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_last_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_last_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_imgBayer_din : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_imgBayer_write : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_eol_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_eol_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_axi_data_3_out : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_axi_data_3_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_data_4_out : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_data_4_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_last_4_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_last_4_out_ap_vld : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_221_d : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reg_unsigned_short_s_fu_221_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reg_unsigned_short_s_fu_221_ap_ce : STD_LOGIC;
    signal ap_block_state1_ignore_call16 : BOOLEAN;
    signal grp_reg_unsigned_short_s_fu_242_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sof_reg_120 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal axi_last_2_reg_132 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start_reg : STD_LOGIC := '0';
    signal axi_data_2_fu_84 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal axi_last_4_loc_fu_92 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_88 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal i_4_fu_269_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln163_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal regslice_both_s_axis_video_V_data_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TDATA_int_regslice : STD_LOGIC_VECTOR (39 downto 0);
    signal s_axis_video_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_video_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_video_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TKEEP_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_s_axis_video_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TSTRB_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_s_axis_video_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_user_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_video_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_last_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_video_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_id_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_video_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_video_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_video_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_video_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_video_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_v_demosaic_0_0_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (4 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (4 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_out : OUT STD_LOGIC_VECTOR (39 downto 0);
        axi_data_out_ap_vld : OUT STD_LOGIC;
        axi_last_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        axi_last_out_ap_vld : OUT STD_LOGIC );
    end component;


    component system_v_demosaic_0_0_AXIvideo2MultiBayer_Pipeline_loop_width IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        imgBayer_din : OUT STD_LOGIC_VECTOR (39 downto 0);
        imgBayer_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        imgBayer_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        imgBayer_full_n : IN STD_LOGIC;
        imgBayer_write : OUT STD_LOGIC;
        sof_4 : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_last_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_2 : IN STD_LOGIC_VECTOR (39 downto 0);
        trunc_ln141_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (4 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (4 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        eol_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        eol_out_ap_vld : OUT STD_LOGIC;
        axi_data_3_out : OUT STD_LOGIC_VECTOR (39 downto 0);
        axi_data_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component system_v_demosaic_0_0_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        axi_data_3_reload : IN STD_LOGIC_VECTOR (39 downto 0);
        select_ln188 : IN STD_LOGIC_VECTOR (0 downto 0);
        eol_reload : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (4 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (4 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_4_out : OUT STD_LOGIC_VECTOR (39 downto 0);
        axi_data_4_out_ap_vld : OUT STD_LOGIC;
        axi_last_4_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        axi_last_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component system_v_demosaic_0_0_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        d : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (9 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component system_v_demosaic_0_0_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142 : component system_v_demosaic_0_0_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start,
        ap_done => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_done,
        ap_idle => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_idle,
        ap_ready => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID_int_regslice,
        s_axis_video_TDATA => s_axis_video_TDATA_int_regslice,
        s_axis_video_TREADY => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP_int_regslice,
        s_axis_video_TSTRB => s_axis_video_TSTRB_int_regslice,
        s_axis_video_TUSER => s_axis_video_TUSER_int_regslice,
        s_axis_video_TLAST => s_axis_video_TLAST_int_regslice,
        s_axis_video_TID => s_axis_video_TID_int_regslice,
        s_axis_video_TDEST => s_axis_video_TDEST_int_regslice,
        axi_data_out => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_data_out,
        axi_data_out_ap_vld => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_data_out_ap_vld,
        axi_last_out => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_last_out,
        axi_last_out_ap_vld => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_last_out_ap_vld);

    grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162 : component system_v_demosaic_0_0_AXIvideo2MultiBayer_Pipeline_loop_width
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start,
        ap_done => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_done,
        ap_idle => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_idle,
        ap_ready => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID_int_regslice,
        imgBayer_din => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_imgBayer_din,
        imgBayer_num_data_valid => ap_const_lv3_0,
        imgBayer_fifo_cap => ap_const_lv3_0,
        imgBayer_full_n => imgBayer_full_n,
        imgBayer_write => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_imgBayer_write,
        sof_4 => sof_reg_120,
        axi_last_2 => axi_last_2_reg_132,
        axi_data_2 => axi_data_2_fu_84,
        trunc_ln141_1 => trunc_ln141_1_reg_349,
        s_axis_video_TDATA => s_axis_video_TDATA_int_regslice,
        s_axis_video_TREADY => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP_int_regslice,
        s_axis_video_TSTRB => s_axis_video_TSTRB_int_regslice,
        s_axis_video_TUSER => s_axis_video_TUSER_int_regslice,
        s_axis_video_TLAST => s_axis_video_TLAST_int_regslice,
        s_axis_video_TID => s_axis_video_TID_int_regslice,
        s_axis_video_TDEST => s_axis_video_TDEST_int_regslice,
        eol_out => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_eol_out,
        eol_out_ap_vld => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_eol_out_ap_vld,
        axi_data_3_out => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_axi_data_3_out,
        axi_data_3_out_ap_vld => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_axi_data_3_out_ap_vld);

    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190 : component system_v_demosaic_0_0_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start,
        ap_done => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_done,
        ap_idle => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_idle,
        ap_ready => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID_int_regslice,
        axi_data_3_reload => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_axi_data_3_out,
        select_ln188 => select_ln188_reg_387,
        eol_reload => grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_eol_out,
        s_axis_video_TDATA => s_axis_video_TDATA_int_regslice,
        s_axis_video_TREADY => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP_int_regslice,
        s_axis_video_TSTRB => s_axis_video_TSTRB_int_regslice,
        s_axis_video_TUSER => s_axis_video_TUSER_int_regslice,
        s_axis_video_TLAST => s_axis_video_TLAST_int_regslice,
        s_axis_video_TID => s_axis_video_TID_int_regslice,
        s_axis_video_TDEST => s_axis_video_TDEST_int_regslice,
        axi_data_4_out => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_data_4_out,
        axi_data_4_out_ap_vld => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_data_4_out_ap_vld,
        axi_last_4_out => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_last_4_out,
        axi_last_4_out_ap_vld => grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_last_4_out_ap_vld);

    grp_reg_unsigned_short_s_fu_221 : component system_v_demosaic_0_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        d => grp_reg_unsigned_short_s_fu_221_d,
        ap_return => grp_reg_unsigned_short_s_fu_221_ap_return,
        ap_ce => grp_reg_unsigned_short_s_fu_221_ap_ce);

    grp_reg_unsigned_short_s_fu_242 : component system_v_demosaic_0_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        d => trunc_ln145_reg_344,
        ap_return => grp_reg_unsigned_short_s_fu_242_ap_return,
        ap_ce => grp_reg_unsigned_short_s_fu_242_ap_ce);

    regslice_both_s_axis_video_V_data_V_U : component system_v_demosaic_0_0_regslice_both
    generic map (
        DataWidth => 40)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TDATA,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_data_V_U_ack_in,
        data_out => s_axis_video_TDATA_int_regslice,
        vld_out => s_axis_video_TVALID_int_regslice,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_data_V_U_apdone_blk);

    regslice_both_s_axis_video_V_keep_V_U : component system_v_demosaic_0_0_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TKEEP,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_keep_V_U_ack_in,
        data_out => s_axis_video_TKEEP_int_regslice,
        vld_out => regslice_both_s_axis_video_V_keep_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_keep_V_U_apdone_blk);

    regslice_both_s_axis_video_V_strb_V_U : component system_v_demosaic_0_0_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TSTRB,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_strb_V_U_ack_in,
        data_out => s_axis_video_TSTRB_int_regslice,
        vld_out => regslice_both_s_axis_video_V_strb_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_strb_V_U_apdone_blk);

    regslice_both_s_axis_video_V_user_V_U : component system_v_demosaic_0_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TUSER,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_user_V_U_ack_in,
        data_out => s_axis_video_TUSER_int_regslice,
        vld_out => regslice_both_s_axis_video_V_user_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_user_V_U_apdone_blk);

    regslice_both_s_axis_video_V_last_V_U : component system_v_demosaic_0_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TLAST,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_last_V_U_ack_in,
        data_out => s_axis_video_TLAST_int_regslice,
        vld_out => regslice_both_s_axis_video_V_last_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_last_V_U_apdone_blk);

    regslice_both_s_axis_video_V_id_V_U : component system_v_demosaic_0_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TID,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_id_V_U_ack_in,
        data_out => s_axis_video_TID_int_regslice,
        vld_out => regslice_both_s_axis_video_V_id_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_id_V_U_apdone_blk);

    regslice_both_s_axis_video_V_dest_V_U : component system_v_demosaic_0_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_video_TDEST,
        vld_in => s_axis_video_TVALID,
        ack_in => regslice_both_s_axis_video_V_dest_V_U_ack_in,
        data_out => s_axis_video_TDEST_int_regslice,
        vld_out => regslice_both_s_axis_video_V_dest_V_U_vld_out,
        ack_out => s_axis_video_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_video_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln163_fu_264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_2_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_data_4_out_ap_vld = ap_const_logic_1))) then 
                axi_data_2_fu_84 <= grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_data_4_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_data_out_ap_vld = ap_const_logic_1))) then 
                axi_data_2_fu_84 <= grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_data_out;
            end if; 
        end if;
    end process;

    axi_last_2_reg_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                axi_last_2_reg_132 <= axi_last_4_loc_fu_92;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                axi_last_2_reg_132 <= grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_axi_last_out;
            end if; 
        end if;
    end process;

    i_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_88 <= ap_const_lv10_0;
            elsif (((icmp_ln163_fu_264_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_fu_88 <= i_4_fu_269_p2;
            end if; 
        end if;
    end process;

    sof_reg_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                sof_reg_120 <= and_ln188_reg_376;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                sof_reg_120 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                and_ln188_reg_376 <= and_ln188_fu_275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_last_4_out_ap_vld = ap_const_logic_1))) then
                axi_last_4_loc_fu_92 <= grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_axi_last_4_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                cmp10252_reg_363 <= cmp10252_fu_250_p2;
                rows_reg_355 <= grp_reg_unsigned_short_s_fu_242_ap_return;
                xor_ln188_reg_368 <= xor_ln188_fu_255_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                select_ln188_reg_387 <= select_ln188_fu_292_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                trunc_ln141_1_reg_349 <= grp_reg_unsigned_short_s_fu_221_ap_return(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                trunc_ln145_reg_344 <= trunc_ln145_fu_213_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state5, grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_done, grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_done, grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln163_fu_264_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln163_fu_264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    and_ln188_fu_275_p2 <= (xor_ln188_reg_368 and sof_reg_120);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_done)
    begin
        if ((grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_done)
    begin
        if ((grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_done)
    begin
        if ((grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call16_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call16 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5, icmp_ln163_fu_264_p2)
    begin
        if (((icmp_ln163_fu_264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5, icmp_ln163_fu_264_p2)
    begin
        if (((icmp_ln163_fu_264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp10252_fu_250_p2 <= "0" when (trunc_ln141_1_reg_349 = ap_const_lv8_0) else "1";
    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start <= grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_ap_start_reg;
    grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start <= grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_start_reg;
    grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start <= grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_ap_start_reg;

    grp_reg_unsigned_short_s_fu_221_ap_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state1_ignore_call16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1_ignore_call16) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_reg_unsigned_short_s_fu_221_ap_ce <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_s_fu_221_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_reg_unsigned_short_s_fu_221_d <= WidthIn(10 - 1 downto 0);

    grp_reg_unsigned_short_s_fu_242_ap_ce_assign_proc : process(ap_CS_fsm_state4, grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_done, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_reg_unsigned_short_s_fu_242_ap_ce <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_s_fu_242_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_4_fu_269_p2 <= std_logic_vector(unsigned(i_fu_88) + unsigned(ap_const_lv10_1));
    icmp_ln163_fu_264_p2 <= "1" when (i_fu_88 = rows_reg_355) else "0";
    imgBayer_din <= grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_imgBayer_din;

    imgBayer_write_assign_proc : process(grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_imgBayer_write, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            imgBayer_write <= grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_imgBayer_write;
        else 
            imgBayer_write <= ap_const_logic_0;
        end if; 
    end process;

    s_axis_video_TREADY <= regslice_both_s_axis_video_V_data_V_U_ack_in;

    s_axis_video_TREADY_int_regslice_assign_proc : process(grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_s_axis_video_TREADY, grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_s_axis_video_TREADY, grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_s_axis_video_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            s_axis_video_TREADY_int_regslice <= grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_eol_fu_190_s_axis_video_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            s_axis_video_TREADY_int_regslice <= grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_s_axis_video_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_axis_video_TREADY_int_regslice <= grp_AXIvideo2MultiBayer_Pipeline_loop_wait_for_start_fu_142_s_axis_video_TREADY;
        else 
            s_axis_video_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    select_ln188_fu_292_p3 <= 
        grp_AXIvideo2MultiBayer_Pipeline_loop_width_fu_162_eol_out when (cmp10252_reg_363(0) = '1') else 
        axi_last_2_reg_132;
    trunc_ln145_fu_213_p1 <= Height(10 - 1 downto 0);
    xor_ln188_fu_255_p2 <= (cmp10252_fu_250_p2 xor ap_const_lv1_1);
end behav;
