// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module system_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1101_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgRgb_dout,
        imgRgb_num_data_valid,
        imgRgb_fifo_cap,
        imgRgb_empty_n,
        imgRgb_read,
        imgUnzip_din,
        imgUnzip_num_data_valid,
        imgUnzip_fifo_cap,
        imgUnzip_full_n,
        imgUnzip_write,
        p_0_0_0477_3715_lcssa749825,
        p_0_0_0478_3713_lcssa747823,
        p_0_0_0479_3717_lcssa745821,
        conv2_i_i_3_lcssa819,
        p_0_0_0477_2709_lcssa742817,
        p_0_0_0478_2707_lcssa740815,
        p_0_0_0479_2711_lcssa738813,
        p_0_0_0477_1703_lcssa735809,
        p_0_0_0478_1701_lcssa733807,
        p_0_0_0479_1705_lcssa731805,
        p_0_0_0477697_lcssa728801,
        p_0_0_0478695_lcssa726799,
        p_0_0_0479699_lcssa724797,
        loopWidth,
        zext_ln1085,
        p_0_0_0480_7748_out,
        p_0_0_0480_7748_out_ap_vld,
        p_0_0_0481_7746_out,
        p_0_0_0481_7746_out_ap_vld,
        p_0_0_0482_7744_out,
        p_0_0_0482_7744_out_ap_vld,
        p_0_0_0483_7743_out,
        p_0_0_0483_7743_out_ap_vld,
        p_0_0_0477_2709741_out,
        p_0_0_0477_2709741_out_ap_vld,
        p_0_0_0478_2707739_out,
        p_0_0_0478_2707739_out_ap_vld,
        p_0_0_0479_2711737_out,
        p_0_0_0479_2711737_out_ap_vld,
        conv2_i_i_2736_out_i,
        conv2_i_i_2736_out_o,
        conv2_i_i_2736_out_o_ap_vld,
        p_0_0_0477_1703734_out,
        p_0_0_0477_1703734_out_ap_vld,
        p_0_0_0478_1701732_out,
        p_0_0_0478_1701732_out_ap_vld,
        p_0_0_0479_1705730_out,
        p_0_0_0479_1705730_out_ap_vld,
        conv2_i_i_1729_out_i,
        conv2_i_i_1729_out_o,
        conv2_i_i_1729_out_o_ap_vld,
        p_0_0_0477697727_out,
        p_0_0_0477697727_out_ap_vld,
        p_0_0_0478695725_out,
        p_0_0_0478695725_out_ap_vld,
        p_0_0_0479699723_out,
        p_0_0_0479699723_out_ap_vld,
        conv2_i_i722_out_i,
        conv2_i_i722_out_o,
        conv2_i_i722_out_o_ap_vld,
        p_0_0_0480_7721_out_i,
        p_0_0_0480_7721_out_o,
        p_0_0_0480_7721_out_o_ap_vld,
        p_0_0_0481_7720_out_i,
        p_0_0_0481_7720_out_o,
        p_0_0_0481_7720_out_o_ap_vld,
        p_0_0_0482_7719_out_i,
        p_0_0_0482_7719_out_o,
        p_0_0_0482_7719_out_o_ap_vld,
        p_0_0_0483_7718_out_i,
        p_0_0_0483_7718_out_o,
        p_0_0_0483_7718_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [119:0] imgRgb_dout;
input  [2:0] imgRgb_num_data_valid;
input  [2:0] imgRgb_fifo_cap;
input   imgRgb_empty_n;
output   imgRgb_read;
output  [119:0] imgUnzip_din;
input  [2:0] imgUnzip_num_data_valid;
input  [2:0] imgUnzip_fifo_cap;
input   imgUnzip_full_n;
output   imgUnzip_write;
input  [9:0] p_0_0_0477_3715_lcssa749825;
input  [9:0] p_0_0_0478_3713_lcssa747823;
input  [9:0] p_0_0_0479_3717_lcssa745821;
input  [9:0] conv2_i_i_3_lcssa819;
input  [9:0] p_0_0_0477_2709_lcssa742817;
input  [9:0] p_0_0_0478_2707_lcssa740815;
input  [9:0] p_0_0_0479_2711_lcssa738813;
input  [9:0] p_0_0_0477_1703_lcssa735809;
input  [9:0] p_0_0_0478_1701_lcssa733807;
input  [9:0] p_0_0_0479_1705_lcssa731805;
input  [9:0] p_0_0_0477697_lcssa728801;
input  [9:0] p_0_0_0478695_lcssa726799;
input  [9:0] p_0_0_0479699_lcssa724797;
input  [16:0] loopWidth;
input  [15:0] zext_ln1085;
output  [9:0] p_0_0_0480_7748_out;
output   p_0_0_0480_7748_out_ap_vld;
output  [9:0] p_0_0_0481_7746_out;
output   p_0_0_0481_7746_out_ap_vld;
output  [9:0] p_0_0_0482_7744_out;
output   p_0_0_0482_7744_out_ap_vld;
output  [9:0] p_0_0_0483_7743_out;
output   p_0_0_0483_7743_out_ap_vld;
output  [9:0] p_0_0_0477_2709741_out;
output   p_0_0_0477_2709741_out_ap_vld;
output  [9:0] p_0_0_0478_2707739_out;
output   p_0_0_0478_2707739_out_ap_vld;
output  [9:0] p_0_0_0479_2711737_out;
output   p_0_0_0479_2711737_out_ap_vld;
input  [9:0] conv2_i_i_2736_out_i;
output  [9:0] conv2_i_i_2736_out_o;
output   conv2_i_i_2736_out_o_ap_vld;
output  [9:0] p_0_0_0477_1703734_out;
output   p_0_0_0477_1703734_out_ap_vld;
output  [9:0] p_0_0_0478_1701732_out;
output   p_0_0_0478_1701732_out_ap_vld;
output  [9:0] p_0_0_0479_1705730_out;
output   p_0_0_0479_1705730_out_ap_vld;
input  [9:0] conv2_i_i_1729_out_i;
output  [9:0] conv2_i_i_1729_out_o;
output   conv2_i_i_1729_out_o_ap_vld;
output  [9:0] p_0_0_0477697727_out;
output   p_0_0_0477697727_out_ap_vld;
output  [9:0] p_0_0_0478695725_out;
output   p_0_0_0478695725_out_ap_vld;
output  [9:0] p_0_0_0479699723_out;
output   p_0_0_0479699723_out_ap_vld;
input  [9:0] conv2_i_i722_out_i;
output  [9:0] conv2_i_i722_out_o;
output   conv2_i_i722_out_o_ap_vld;
input  [9:0] p_0_0_0480_7721_out_i;
output  [9:0] p_0_0_0480_7721_out_o;
output   p_0_0_0480_7721_out_o_ap_vld;
input  [9:0] p_0_0_0481_7720_out_i;
output  [9:0] p_0_0_0481_7720_out_o;
output   p_0_0_0481_7720_out_o_ap_vld;
input  [9:0] p_0_0_0482_7719_out_i;
output  [9:0] p_0_0_0482_7719_out_o;
output   p_0_0_0482_7719_out_o_ap_vld;
input  [9:0] p_0_0_0483_7718_out_i;
output  [9:0] p_0_0_0483_7718_out_o;
output   p_0_0_0483_7718_out_o_ap_vld;

reg ap_idle;
reg imgRgb_read;
reg imgUnzip_write;
reg p_0_0_0480_7748_out_ap_vld;
reg p_0_0_0481_7746_out_ap_vld;
reg p_0_0_0482_7744_out_ap_vld;
reg p_0_0_0483_7743_out_ap_vld;
reg p_0_0_0477_2709741_out_ap_vld;
reg p_0_0_0478_2707739_out_ap_vld;
reg p_0_0_0479_2711737_out_ap_vld;
reg[9:0] conv2_i_i_2736_out_o;
reg conv2_i_i_2736_out_o_ap_vld;
reg p_0_0_0477_1703734_out_ap_vld;
reg p_0_0_0478_1701732_out_ap_vld;
reg p_0_0_0479_1705730_out_ap_vld;
reg[9:0] conv2_i_i_1729_out_o;
reg conv2_i_i_1729_out_o_ap_vld;
reg p_0_0_0477697727_out_ap_vld;
reg p_0_0_0478695725_out_ap_vld;
reg p_0_0_0479699723_out_ap_vld;
reg[9:0] conv2_i_i722_out_o;
reg conv2_i_i722_out_o_ap_vld;
reg[9:0] p_0_0_0480_7721_out_o;
reg p_0_0_0480_7721_out_o_ap_vld;
reg[9:0] p_0_0_0481_7720_out_o;
reg p_0_0_0481_7720_out_o_ap_vld;
reg[9:0] p_0_0_0482_7719_out_o;
reg p_0_0_0482_7719_out_o_ap_vld;
reg[9:0] p_0_0_0483_7718_out_o;
reg p_0_0_0483_7718_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln1101_reg_2064;
reg   [0:0] icmp_ln1107_reg_2068;
reg    ap_predicate_op72_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln1159_reg_2072;
reg   [0:0] icmp_ln1159_reg_2072_pp0_iter4_reg;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1101_fu_420_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgRgb_blk_n;
wire    ap_block_pp0_stage0;
reg    imgUnzip_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1101_reg_2064_pp0_iter1_reg;
reg   [0:0] icmp_ln1101_reg_2064_pp0_iter2_reg;
reg   [0:0] icmp_ln1101_reg_2064_pp0_iter3_reg;
wire   [0:0] icmp_ln1107_fu_426_p2;
reg   [0:0] icmp_ln1107_reg_2068_pp0_iter1_reg;
reg   [0:0] icmp_ln1107_reg_2068_pp0_iter2_reg;
wire   [0:0] icmp_ln1159_fu_432_p2;
reg   [0:0] icmp_ln1159_reg_2072_pp0_iter1_reg;
reg   [0:0] icmp_ln1159_reg_2072_pp0_iter2_reg;
reg   [0:0] icmp_ln1159_reg_2072_pp0_iter3_reg;
reg   [9:0] p_0_0_0482_7744_load_reg_2076;
reg   [9:0] p_0_0_0482_7744_load_reg_2076_pp0_iter2_reg;
reg   [9:0] p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg;
reg   [9:0] p_0_0_0480_7748_load_reg_2085;
reg   [9:0] p_0_0_0480_7748_load_reg_2085_pp0_iter2_reg;
reg   [9:0] p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg;
reg   [9:0] p_0_0_0479699723_load_reg_2094;
reg   [9:0] p_0_0_0479699723_load_reg_2094_pp0_iter2_reg;
reg   [9:0] p_0_0_0479699723_load_reg_2094_pp0_iter3_reg;
reg   [9:0] p_0_0_0477697727_load_reg_2102;
reg   [9:0] p_0_0_0477697727_load_reg_2102_pp0_iter2_reg;
reg   [9:0] p_0_0_0477697727_load_reg_2102_pp0_iter3_reg;
wire   [9:0] trunc_ln1109_fu_461_p1;
reg   [9:0] trunc_ln1109_reg_2110;
reg   [9:0] trunc_ln1109_3_reg_2115;
reg   [9:0] trunc_ln1109_3_reg_2115_pp0_iter2_reg;
reg   [9:0] trunc_ln1109_4_reg_2120;
reg   [9:0] trunc_ln1109_5_reg_2125;
reg   [9:0] trunc_ln1109_6_reg_2130;
reg   [9:0] trunc_ln1109_6_reg_2130_pp0_iter2_reg;
reg   [9:0] trunc_ln1109_7_reg_2135;
reg   [9:0] trunc_ln1109_8_reg_2140;
reg   [9:0] trunc_ln1109_9_reg_2145;
reg   [9:0] p_0_0_0481_7746_load_reg_2150;
reg   [9:0] p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg;
reg   [9:0] p_0_0_0478695725_load_reg_2159;
reg   [9:0] p_0_0_0478695725_load_reg_2159_pp0_iter3_reg;
reg   [9:0] p_0_0_0479_1705730_load_reg_2167;
reg   [9:0] p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg;
reg   [9:0] p_0_0_0477_1703734_load_reg_2175;
reg   [9:0] p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg;
reg   [9:0] p_0_0_0479_2711737_load_reg_2183;
reg   [9:0] p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg;
reg   [9:0] p_0_0_0477_2709741_load_reg_2191;
reg   [9:0] p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg;
reg   [9:0] p_0_0_0479699723_load_1_reg_2199;
reg   [9:0] p_0_0_0479699723_load_1_reg_2199_pp0_iter3_reg;
reg   [9:0] p_0_0_0477697727_load_1_reg_2204;
reg   [9:0] p_0_0_0477697727_load_1_reg_2204_pp0_iter3_reg;
wire   [8:0] add_ln1129_fu_677_p2;
reg   [8:0] add_ln1129_reg_2209;
wire   [8:0] add_ln1129_9_fu_711_p2;
reg   [8:0] add_ln1129_9_reg_2214;
reg   [9:0] p_0_0_0478_1701732_load_reg_2219;
reg   [9:0] p_0_0_0478_2707739_load_reg_2227;
reg   [9:0] p_0_0_0478695725_load_1_reg_2235;
reg   [6:0] lshr_ln_reg_2240;
wire   [8:0] add_ln1129_3_fu_830_p2;
reg   [8:0] add_ln1129_3_reg_2245;
wire   [8:0] add_ln1129_6_fu_864_p2;
reg   [8:0] add_ln1129_6_reg_2250;
reg   [6:0] lshr_ln1132_3_reg_2255;
wire   [9:0] select_ln1144_fu_1275_p3;
reg   [9:0] select_ln1144_reg_2260;
wire   [9:0] select_ln1144_1_fu_1282_p3;
reg   [9:0] select_ln1144_1_reg_2265;
wire   [9:0] select_ln1144_2_fu_1289_p3;
reg   [9:0] select_ln1144_2_reg_2270;
wire   [9:0] select_ln1144_3_fu_1452_p3;
reg   [9:0] select_ln1144_3_reg_2275;
wire   [9:0] select_ln1144_4_fu_1459_p3;
reg   [9:0] select_ln1144_4_reg_2280;
wire   [9:0] select_ln1144_5_fu_1466_p3;
reg   [9:0] select_ln1144_5_reg_2285;
wire   [9:0] select_ln1144_6_fu_1629_p3;
reg   [9:0] select_ln1144_6_reg_2290;
wire   [9:0] select_ln1144_7_fu_1636_p3;
reg   [9:0] select_ln1144_7_reg_2295;
wire   [9:0] select_ln1144_8_fu_1643_p3;
reg   [9:0] select_ln1144_8_reg_2300;
wire   [9:0] select_ln1144_9_fu_1806_p3;
reg   [9:0] select_ln1144_9_reg_2305;
wire   [9:0] select_ln1144_10_fu_1813_p3;
reg   [9:0] select_ln1144_10_reg_2310;
wire   [9:0] select_ln1144_11_fu_1820_p3;
reg   [9:0] select_ln1144_11_reg_2315;
reg    ap_condition_exit_pp0_iter4_stage0;
wire   [9:0] zext_ln1132_2_fu_1073_p1;
wire   [9:0] zext_ln1132_1_fu_1016_p1;
wire   [9:0] zext_ln1132_fu_960_p1;
reg   [16:0] x_fu_184;
wire   [16:0] x_3_fu_438_p2;
wire    ap_loop_init;
reg   [16:0] ap_sig_allocacmp_x_2;
reg   [9:0] p_0_0_0482_7744_fu_188;
reg   [9:0] p_0_0_0481_7746_fu_192;
reg   [9:0] p_0_0_0480_7748_fu_196;
reg   [9:0] p_0_0_0479699723_fu_200;
reg   [9:0] p_0_0_0478695725_fu_204;
reg   [9:0] p_0_0_0477697727_fu_208;
reg   [9:0] p_0_0_0479_1705730_fu_212;
reg   [9:0] p_0_0_0478_1701732_fu_216;
reg   [9:0] p_0_0_0477_1703734_fu_220;
reg   [9:0] p_0_0_0479_2711737_fu_224;
reg   [9:0] p_0_0_0478_2707739_fu_228;
reg   [9:0] p_0_0_0477_2709741_fu_232;
reg   [9:0] p_0_0_0483_7743_fu_236;
wire   [9:0] zext_ln1132_3_fu_1077_p1;
reg    ap_block_pp0_stage0_01001;
wire   [16:0] zext_ln1085_cast_fu_343_p1;
wire   [7:0] tmp_fu_649_p4;
wire   [6:0] tmp_1_fu_663_p4;
wire   [8:0] zext_ln1129_7_fu_673_p1;
wire   [8:0] zext_ln1129_4_fu_659_p1;
wire   [7:0] tmp_6_fu_683_p4;
wire   [6:0] tmp_7_fu_697_p4;
wire   [8:0] zext_ln1129_19_fu_707_p1;
wire   [8:0] zext_ln1129_16_fu_693_p1;
wire   [8:0] lshr_ln1129_1_fu_749_p4;
wire   [6:0] lshr_ln1129_2_fu_763_p4;
wire   [9:0] zext_ln1129_fu_777_p1;
wire   [9:0] zext_ln1129_5_fu_759_p1;
wire   [9:0] add_ln1129_1_fu_780_p2;
wire   [9:0] zext_ln1129_6_fu_773_p1;
wire   [9:0] lum_fu_786_p2;
wire   [7:0] tmp_2_fu_802_p4;
wire   [6:0] tmp_3_fu_816_p4;
wire   [8:0] zext_ln1129_11_fu_826_p1;
wire   [8:0] zext_ln1129_8_fu_812_p1;
wire   [7:0] tmp_4_fu_836_p4;
wire   [6:0] tmp_5_fu_850_p4;
wire   [8:0] zext_ln1129_15_fu_860_p1;
wire   [8:0] zext_ln1129_12_fu_846_p1;
wire   [8:0] lshr_ln1129_3_fu_870_p4;
wire   [6:0] lshr_ln1129_4_fu_884_p4;
wire   [9:0] zext_ln1129_3_fu_898_p1;
wire   [9:0] zext_ln1129_17_fu_880_p1;
wire   [9:0] add_ln1129_10_fu_901_p2;
wire   [9:0] zext_ln1129_18_fu_894_p1;
wire   [9:0] lum_3_fu_907_p2;
wire   [8:0] lshr_ln1129_5_fu_963_p4;
wire   [6:0] lshr_ln1129_6_fu_977_p4;
wire   [9:0] zext_ln1129_1_fu_991_p1;
wire   [9:0] zext_ln1129_9_fu_973_p1;
wire   [9:0] add_ln1129_4_fu_994_p2;
wire   [9:0] zext_ln1129_10_fu_987_p1;
wire   [9:0] lum_1_fu_1000_p2;
wire   [6:0] lshr_ln1132_1_fu_1006_p4;
wire   [8:0] lshr_ln1129_9_fu_1020_p4;
wire   [6:0] lshr_ln1129_s_fu_1034_p4;
wire   [9:0] zext_ln1129_2_fu_1048_p1;
wire   [9:0] zext_ln1129_13_fu_1030_p1;
wire   [9:0] add_ln1129_7_fu_1051_p2;
wire   [9:0] zext_ln1129_14_fu_1044_p1;
wire   [9:0] lum_2_fu_1057_p2;
wire   [6:0] lshr_ln1132_2_fu_1063_p4;
wire   [0:0] icmp_ln1144_1_fu_1086_p2;
wire   [0:0] icmp_ln1144_fu_1080_p2;
wire   [0:0] xor_ln1144_fu_1092_p2;
wire   [0:0] icmp_ln1144_2_fu_1104_p2;
wire   [0:0] xor_ln1144_1_fu_1110_p2;
wire   [0:0] icmp_ln1144_3_fu_1116_p2;
wire   [10:0] shl_ln_fu_1131_p3;
wire   [10:0] zext_ln1147_1_fu_1138_p1;
wire   [10:0] zext_ln1147_3_fu_1145_p1;
wire   [10:0] add_ln1147_fu_1149_p2;
wire   [11:0] zext_ln1147_4_fu_1155_p1;
wire   [11:0] zext_ln1147_2_fu_1141_p1;
wire   [11:0] add_ln1147_1_fu_1159_p2;
wire   [10:0] shl_ln1_fu_1178_p3;
wire   [10:0] zext_ln1148_1_fu_1185_p1;
wire   [10:0] zext_ln1148_3_fu_1192_p1;
wire   [10:0] add_ln1148_fu_1196_p2;
wire   [11:0] zext_ln1148_4_fu_1202_p1;
wire   [11:0] zext_ln1148_2_fu_1188_p1;
wire   [11:0] add_ln1148_1_fu_1206_p2;
wire   [10:0] shl_ln2_fu_1225_p3;
wire   [10:0] zext_ln1149_1_fu_1232_p1;
wire   [10:0] zext_ln1149_3_fu_1239_p1;
wire   [10:0] add_ln1149_fu_1243_p2;
wire   [11:0] zext_ln1149_4_fu_1249_p1;
wire   [11:0] zext_ln1149_2_fu_1235_p1;
wire   [11:0] add_ln1149_1_fu_1253_p2;
wire   [0:0] and_ln1144_fu_1098_p2;
wire   [0:0] and_ln1144_1_fu_1122_p2;
wire   [0:0] or_ln1144_3_fu_1269_p2;
wire   [9:0] b_s_fu_1259_p4;
wire   [9:0] g_s_fu_1212_p4;
wire   [9:0] r_s_fu_1165_p4;
wire   [0:0] icmp_ln1144_4_fu_1296_p2;
wire   [0:0] xor_ln1144_2_fu_1302_p2;
wire   [0:0] icmp_ln1144_5_fu_1308_p2;
wire   [0:0] and_ln1144_2_fu_1314_p2;
wire   [0:0] and_ln1144_3_fu_1320_p2;
wire   [10:0] shl_ln1147_1_fu_1332_p3;
wire   [10:0] zext_ln1147_5_fu_1339_p1;
wire   [10:0] zext_ln1147_fu_1128_p1;
wire   [10:0] add_ln1147_2_fu_1346_p2;
wire   [11:0] zext_ln1147_7_fu_1352_p1;
wire   [11:0] zext_ln1147_6_fu_1342_p1;
wire   [11:0] add_ln1147_3_fu_1356_p2;
wire   [10:0] shl_ln1148_1_fu_1372_p3;
wire   [10:0] zext_ln1148_5_fu_1379_p1;
wire   [10:0] zext_ln1148_fu_1175_p1;
wire   [10:0] add_ln1148_2_fu_1386_p2;
wire   [11:0] zext_ln1148_7_fu_1392_p1;
wire   [11:0] zext_ln1148_6_fu_1382_p1;
wire   [11:0] add_ln1148_3_fu_1396_p2;
wire   [10:0] shl_ln1149_1_fu_1412_p3;
wire   [10:0] zext_ln1149_5_fu_1419_p1;
wire   [10:0] zext_ln1149_fu_1222_p1;
wire   [10:0] add_ln1149_2_fu_1426_p2;
wire   [11:0] zext_ln1149_7_fu_1432_p1;
wire   [11:0] zext_ln1149_6_fu_1422_p1;
wire   [11:0] add_ln1149_3_fu_1436_p2;
wire   [0:0] or_ln1144_fu_1326_p2;
wire   [9:0] b_1_fu_1442_p4;
wire   [9:0] g_1_fu_1402_p4;
wire   [9:0] r_1_fu_1362_p4;
wire   [0:0] icmp_ln1144_6_fu_1473_p2;
wire   [0:0] xor_ln1144_3_fu_1479_p2;
wire   [0:0] icmp_ln1144_7_fu_1485_p2;
wire   [0:0] and_ln1144_4_fu_1491_p2;
wire   [0:0] and_ln1144_5_fu_1497_p2;
wire   [10:0] shl_ln1147_2_fu_1509_p3;
wire   [10:0] zext_ln1147_8_fu_1516_p1;
wire   [10:0] add_ln1147_4_fu_1523_p2;
wire   [11:0] zext_ln1147_10_fu_1529_p1;
wire   [11:0] zext_ln1147_9_fu_1519_p1;
wire   [11:0] add_ln1147_5_fu_1533_p2;
wire   [10:0] shl_ln1148_2_fu_1549_p3;
wire   [10:0] zext_ln1148_8_fu_1556_p1;
wire   [10:0] add_ln1148_4_fu_1563_p2;
wire   [11:0] zext_ln1148_10_fu_1569_p1;
wire   [11:0] zext_ln1148_9_fu_1559_p1;
wire   [11:0] add_ln1148_5_fu_1573_p2;
wire   [10:0] shl_ln1149_2_fu_1589_p3;
wire   [10:0] zext_ln1149_8_fu_1596_p1;
wire   [10:0] add_ln1149_4_fu_1603_p2;
wire   [11:0] zext_ln1149_10_fu_1609_p1;
wire   [11:0] zext_ln1149_9_fu_1599_p1;
wire   [11:0] add_ln1149_5_fu_1613_p2;
wire   [0:0] or_ln1144_1_fu_1503_p2;
wire   [9:0] b_2_fu_1619_p4;
wire   [9:0] g_2_fu_1579_p4;
wire   [9:0] r_2_fu_1539_p4;
wire   [0:0] icmp_ln1144_8_fu_1650_p2;
wire   [0:0] xor_ln1144_4_fu_1656_p2;
wire   [0:0] icmp_ln1144_9_fu_1662_p2;
wire   [0:0] and_ln1144_6_fu_1668_p2;
wire   [0:0] and_ln1144_7_fu_1674_p2;
wire   [10:0] shl_ln1147_3_fu_1686_p3;
wire   [10:0] zext_ln1147_11_fu_1693_p1;
wire   [10:0] add_ln1147_6_fu_1700_p2;
wire   [11:0] zext_ln1147_13_fu_1706_p1;
wire   [11:0] zext_ln1147_12_fu_1696_p1;
wire   [11:0] add_ln1147_7_fu_1710_p2;
wire   [10:0] shl_ln1148_3_fu_1726_p3;
wire   [10:0] zext_ln1148_11_fu_1733_p1;
wire   [10:0] add_ln1148_6_fu_1740_p2;
wire   [11:0] zext_ln1148_13_fu_1746_p1;
wire   [11:0] zext_ln1148_12_fu_1736_p1;
wire   [11:0] add_ln1148_7_fu_1750_p2;
wire   [10:0] shl_ln1149_3_fu_1766_p3;
wire   [10:0] zext_ln1149_11_fu_1773_p1;
wire   [10:0] add_ln1149_6_fu_1780_p2;
wire   [11:0] zext_ln1149_13_fu_1786_p1;
wire   [11:0] zext_ln1149_12_fu_1776_p1;
wire   [11:0] add_ln1149_7_fu_1790_p2;
wire   [0:0] or_ln1144_2_fu_1680_p2;
wire   [9:0] b_3_fu_1796_p4;
wire   [9:0] g_3_fu_1756_p4;
wire   [9:0] r_3_fu_1716_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1358;
reg    ap_condition_1362;
reg    ap_condition_1366;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 x_fu_184 = 17'd0;
#0 p_0_0_0482_7744_fu_188 = 10'd0;
#0 p_0_0_0481_7746_fu_192 = 10'd0;
#0 p_0_0_0480_7748_fu_196 = 10'd0;
#0 p_0_0_0479699723_fu_200 = 10'd0;
#0 p_0_0_0478695725_fu_204 = 10'd0;
#0 p_0_0_0477697727_fu_208 = 10'd0;
#0 p_0_0_0479_1705730_fu_212 = 10'd0;
#0 p_0_0_0478_1701732_fu_216 = 10'd0;
#0 p_0_0_0477_1703734_fu_220 = 10'd0;
#0 p_0_0_0479_2711737_fu_224 = 10'd0;
#0 p_0_0_0478_2707739_fu_228 = 10'd0;
#0 p_0_0_0477_2709741_fu_232 = 10'd0;
#0 p_0_0_0483_7743_fu_236 = 10'd0;
#0 ap_done_reg = 1'b0;
end

system_v_demosaic_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter4_stage0)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0477697727_fu_208 <= p_0_0_0477697_lcssa728801;
        end else if ((1'b1 == ap_condition_1358)) begin
            p_0_0_0477697727_fu_208 <= {{imgRgb_dout[19:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0477_1703734_fu_220 <= p_0_0_0477_1703_lcssa735809;
        end else if ((1'b1 == ap_condition_1362)) begin
            p_0_0_0477_1703734_fu_220 <= trunc_ln1109_4_reg_2120;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0477_2709741_fu_232 <= p_0_0_0477_2709_lcssa742817;
        end else if ((1'b1 == ap_condition_1362)) begin
            p_0_0_0477_2709741_fu_232 <= trunc_ln1109_7_reg_2135;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0478695725_fu_204 <= p_0_0_0478695_lcssa726799;
        end else if ((1'b1 == ap_condition_1362)) begin
            p_0_0_0478695725_fu_204 <= trunc_ln1109_reg_2110;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0478_1701732_fu_216 <= p_0_0_0478_1701_lcssa733807;
        end else if ((1'b1 == ap_condition_1366)) begin
            p_0_0_0478_1701732_fu_216 <= trunc_ln1109_3_reg_2115_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0478_2707739_fu_228 <= p_0_0_0478_2707_lcssa740815;
        end else if ((1'b1 == ap_condition_1366)) begin
            p_0_0_0478_2707739_fu_228 <= trunc_ln1109_6_reg_2130_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0479699723_fu_200 <= p_0_0_0479699_lcssa724797;
        end else if ((1'b1 == ap_condition_1358)) begin
            p_0_0_0479699723_fu_200 <= {{imgRgb_dout[29:20]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0479_1705730_fu_212 <= p_0_0_0479_1705_lcssa731805;
        end else if ((1'b1 == ap_condition_1362)) begin
            p_0_0_0479_1705730_fu_212 <= trunc_ln1109_5_reg_2125;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0479_2711737_fu_224 <= p_0_0_0479_2711_lcssa738813;
        end else if ((1'b1 == ap_condition_1362)) begin
            p_0_0_0479_2711737_fu_224 <= trunc_ln1109_8_reg_2140;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0480_7748_fu_196 <= p_0_0_0477_3715_lcssa749825;
        end else if ((1'b1 == ap_condition_1358)) begin
            p_0_0_0480_7748_fu_196 <= {{imgRgb_dout[109:100]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0481_7746_fu_192 <= p_0_0_0478_3713_lcssa747823;
        end else if ((1'b1 == ap_condition_1362)) begin
            p_0_0_0481_7746_fu_192 <= trunc_ln1109_9_reg_2145;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0482_7744_fu_188 <= p_0_0_0479_3717_lcssa745821;
        end else if ((1'b1 == ap_condition_1358)) begin
            p_0_0_0482_7744_fu_188 <= {{imgRgb_dout[119:110]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0483_7743_fu_236 <= conv2_i_i_3_lcssa819;
        end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
            p_0_0_0483_7743_fu_236 <= zext_ln1132_3_fu_1077_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1101_fu_420_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_184 <= x_3_fu_438_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_184 <= 17'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln1129_3_reg_2245 <= add_ln1129_3_fu_830_p2;
        add_ln1129_6_reg_2250 <= add_ln1129_6_fu_864_p2;
        add_ln1129_9_reg_2214 <= add_ln1129_9_fu_711_p2;
        add_ln1129_reg_2209 <= add_ln1129_fu_677_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln1101_reg_2064_pp0_iter2_reg <= icmp_ln1101_reg_2064_pp0_iter1_reg;
        icmp_ln1101_reg_2064_pp0_iter3_reg <= icmp_ln1101_reg_2064_pp0_iter2_reg;
        icmp_ln1107_reg_2068_pp0_iter2_reg <= icmp_ln1107_reg_2068_pp0_iter1_reg;
        icmp_ln1159_reg_2072_pp0_iter2_reg <= icmp_ln1159_reg_2072_pp0_iter1_reg;
        icmp_ln1159_reg_2072_pp0_iter3_reg <= icmp_ln1159_reg_2072_pp0_iter2_reg;
        icmp_ln1159_reg_2072_pp0_iter4_reg <= icmp_ln1159_reg_2072_pp0_iter3_reg;
        lshr_ln1132_3_reg_2255 <= {{lum_3_fu_907_p2[9:3]}};
        lshr_ln_reg_2240 <= {{lum_fu_786_p2[9:3]}};
        p_0_0_0477697727_load_1_reg_2204 <= p_0_0_0477697727_fu_208;
        p_0_0_0477697727_load_1_reg_2204_pp0_iter3_reg <= p_0_0_0477697727_load_1_reg_2204;
        p_0_0_0477697727_load_reg_2102_pp0_iter2_reg <= p_0_0_0477697727_load_reg_2102;
        p_0_0_0477697727_load_reg_2102_pp0_iter3_reg <= p_0_0_0477697727_load_reg_2102_pp0_iter2_reg;
        p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg <= p_0_0_0477_1703734_load_reg_2175;
        p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg <= p_0_0_0477_2709741_load_reg_2191;
        p_0_0_0478695725_load_1_reg_2235 <= p_0_0_0478695725_fu_204;
        p_0_0_0478695725_load_reg_2159_pp0_iter3_reg <= p_0_0_0478695725_load_reg_2159;
        p_0_0_0479699723_load_1_reg_2199 <= p_0_0_0479699723_fu_200;
        p_0_0_0479699723_load_1_reg_2199_pp0_iter3_reg <= p_0_0_0479699723_load_1_reg_2199;
        p_0_0_0479699723_load_reg_2094_pp0_iter2_reg <= p_0_0_0479699723_load_reg_2094;
        p_0_0_0479699723_load_reg_2094_pp0_iter3_reg <= p_0_0_0479699723_load_reg_2094_pp0_iter2_reg;
        p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg <= p_0_0_0479_1705730_load_reg_2167;
        p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg <= p_0_0_0479_2711737_load_reg_2183;
        p_0_0_0480_7748_load_reg_2085_pp0_iter2_reg <= p_0_0_0480_7748_load_reg_2085;
        p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg <= p_0_0_0480_7748_load_reg_2085_pp0_iter2_reg;
        p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg <= p_0_0_0481_7746_load_reg_2150;
        p_0_0_0482_7744_load_reg_2076_pp0_iter2_reg <= p_0_0_0482_7744_load_reg_2076;
        p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg <= p_0_0_0482_7744_load_reg_2076_pp0_iter2_reg;
        select_ln1144_10_reg_2310 <= select_ln1144_10_fu_1813_p3;
        select_ln1144_11_reg_2315 <= select_ln1144_11_fu_1820_p3;
        select_ln1144_1_reg_2265 <= select_ln1144_1_fu_1282_p3;
        select_ln1144_2_reg_2270 <= select_ln1144_2_fu_1289_p3;
        select_ln1144_3_reg_2275 <= select_ln1144_3_fu_1452_p3;
        select_ln1144_4_reg_2280 <= select_ln1144_4_fu_1459_p3;
        select_ln1144_5_reg_2285 <= select_ln1144_5_fu_1466_p3;
        select_ln1144_6_reg_2290 <= select_ln1144_6_fu_1629_p3;
        select_ln1144_7_reg_2295 <= select_ln1144_7_fu_1636_p3;
        select_ln1144_8_reg_2300 <= select_ln1144_8_fu_1643_p3;
        select_ln1144_9_reg_2305 <= select_ln1144_9_fu_1806_p3;
        select_ln1144_reg_2260 <= select_ln1144_fu_1275_p3;
        trunc_ln1109_3_reg_2115_pp0_iter2_reg <= trunc_ln1109_3_reg_2115;
        trunc_ln1109_6_reg_2130_pp0_iter2_reg <= trunc_ln1109_6_reg_2130;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1101_reg_2064 <= icmp_ln1101_fu_420_p2;
        icmp_ln1101_reg_2064_pp0_iter1_reg <= icmp_ln1101_reg_2064;
        icmp_ln1107_reg_2068 <= icmp_ln1107_fu_426_p2;
        icmp_ln1107_reg_2068_pp0_iter1_reg <= icmp_ln1107_reg_2068;
        icmp_ln1159_reg_2072 <= icmp_ln1159_fu_432_p2;
        icmp_ln1159_reg_2072_pp0_iter1_reg <= icmp_ln1159_reg_2072;
        trunc_ln1109_3_reg_2115 <= {{imgRgb_dout[39:30]}};
        trunc_ln1109_4_reg_2120 <= {{imgRgb_dout[49:40]}};
        trunc_ln1109_5_reg_2125 <= {{imgRgb_dout[59:50]}};
        trunc_ln1109_6_reg_2130 <= {{imgRgb_dout[69:60]}};
        trunc_ln1109_7_reg_2135 <= {{imgRgb_dout[79:70]}};
        trunc_ln1109_8_reg_2140 <= {{imgRgb_dout[89:80]}};
        trunc_ln1109_9_reg_2145 <= {{imgRgb_dout[99:90]}};
        trunc_ln1109_reg_2110 <= trunc_ln1109_fu_461_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0477697727_load_reg_2102 <= p_0_0_0477697727_fu_208;
        p_0_0_0479699723_load_reg_2094 <= p_0_0_0479699723_fu_200;
        p_0_0_0480_7748_load_reg_2085 <= p_0_0_0480_7748_fu_196;
        p_0_0_0482_7744_load_reg_2076 <= p_0_0_0482_7744_fu_188;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0477_1703734_load_reg_2175 <= p_0_0_0477_1703734_fu_220;
        p_0_0_0477_2709741_load_reg_2191 <= p_0_0_0477_2709741_fu_232;
        p_0_0_0478695725_load_reg_2159 <= p_0_0_0478695725_fu_204;
        p_0_0_0479_1705730_load_reg_2167 <= p_0_0_0479_1705730_fu_212;
        p_0_0_0479_2711737_load_reg_2183 <= p_0_0_0479_2711737_fu_224;
        p_0_0_0481_7746_load_reg_2150 <= p_0_0_0481_7746_fu_192;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_0_0_0478_1701732_load_reg_2219 <= p_0_0_0478_1701732_fu_216;
        p_0_0_0478_2707739_load_reg_2227 <= p_0_0_0478_2707739_fu_228;
    end
end

always @ (*) begin
    if (((icmp_ln1101_fu_420_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_2 = 17'd0;
    end else begin
        ap_sig_allocacmp_x_2 = x_fu_184;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        conv2_i_i722_out_o = zext_ln1132_fu_960_p1;
    end else begin
        conv2_i_i722_out_o = conv2_i_i722_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        conv2_i_i722_out_o_ap_vld = 1'b1;
    end else begin
        conv2_i_i722_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        conv2_i_i_1729_out_o = zext_ln1132_1_fu_1016_p1;
    end else begin
        conv2_i_i_1729_out_o = conv2_i_i_1729_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        conv2_i_i_1729_out_o_ap_vld = 1'b1;
    end else begin
        conv2_i_i_1729_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        conv2_i_i_2736_out_o = zext_ln1132_2_fu_1073_p1;
    end else begin
        conv2_i_i_2736_out_o = conv2_i_i_2736_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        conv2_i_i_2736_out_o_ap_vld = 1'b1;
    end else begin
        conv2_i_i_2736_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op72_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRgb_blk_n = imgRgb_empty_n;
    end else begin
        imgRgb_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op72_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRgb_read = 1'b1;
    end else begin
        imgRgb_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1159_reg_2072_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        imgUnzip_blk_n = imgUnzip_full_n;
    end else begin
        imgUnzip_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1159_reg_2072_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        imgUnzip_write = 1'b1;
    end else begin
        imgUnzip_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0477697727_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0477697727_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0477_1703734_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0477_1703734_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0477_2709741_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0477_2709741_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0478695725_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0478695725_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0478_1701732_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0478_1701732_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0478_2707739_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0478_2707739_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0479699723_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0479699723_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0479_1705730_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0479_1705730_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0479_2711737_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0479_2711737_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        p_0_0_0480_7721_out_o = p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg;
    end else begin
        p_0_0_0480_7721_out_o = p_0_0_0480_7721_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        p_0_0_0480_7721_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0480_7721_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0480_7748_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0480_7748_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        p_0_0_0481_7720_out_o = p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg;
    end else begin
        p_0_0_0481_7720_out_o = p_0_0_0481_7720_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        p_0_0_0481_7720_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0481_7720_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0481_7746_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0481_7746_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        p_0_0_0482_7719_out_o = p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg;
    end else begin
        p_0_0_0482_7719_out_o = p_0_0_0482_7719_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        p_0_0_0482_7719_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0482_7719_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0482_7744_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0482_7744_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        p_0_0_0483_7718_out_o = p_0_0_0483_7743_fu_236;
    end else begin
        p_0_0_0483_7718_out_o = p_0_0_0483_7718_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd1))) begin
        p_0_0_0483_7718_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0483_7718_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1101_reg_2064_pp0_iter3_reg == 1'd0))) begin
        p_0_0_0483_7743_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0483_7743_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1129_10_fu_901_p2 = (zext_ln1129_3_fu_898_p1 + zext_ln1129_17_fu_880_p1);

assign add_ln1129_1_fu_780_p2 = (zext_ln1129_fu_777_p1 + zext_ln1129_5_fu_759_p1);

assign add_ln1129_3_fu_830_p2 = (zext_ln1129_11_fu_826_p1 + zext_ln1129_8_fu_812_p1);

assign add_ln1129_4_fu_994_p2 = (zext_ln1129_1_fu_991_p1 + zext_ln1129_9_fu_973_p1);

assign add_ln1129_6_fu_864_p2 = (zext_ln1129_15_fu_860_p1 + zext_ln1129_12_fu_846_p1);

assign add_ln1129_7_fu_1051_p2 = (zext_ln1129_2_fu_1048_p1 + zext_ln1129_13_fu_1030_p1);

assign add_ln1129_9_fu_711_p2 = (zext_ln1129_19_fu_707_p1 + zext_ln1129_16_fu_693_p1);

assign add_ln1129_fu_677_p2 = (zext_ln1129_7_fu_673_p1 + zext_ln1129_4_fu_659_p1);

assign add_ln1147_1_fu_1159_p2 = (zext_ln1147_4_fu_1155_p1 + zext_ln1147_2_fu_1141_p1);

assign add_ln1147_2_fu_1346_p2 = (zext_ln1147_5_fu_1339_p1 + zext_ln1147_fu_1128_p1);

assign add_ln1147_3_fu_1356_p2 = (zext_ln1147_7_fu_1352_p1 + zext_ln1147_6_fu_1342_p1);

assign add_ln1147_4_fu_1523_p2 = (zext_ln1147_8_fu_1516_p1 + zext_ln1147_1_fu_1138_p1);

assign add_ln1147_5_fu_1533_p2 = (zext_ln1147_10_fu_1529_p1 + zext_ln1147_9_fu_1519_p1);

assign add_ln1147_6_fu_1700_p2 = (zext_ln1147_11_fu_1693_p1 + zext_ln1147_5_fu_1339_p1);

assign add_ln1147_7_fu_1710_p2 = (zext_ln1147_13_fu_1706_p1 + zext_ln1147_12_fu_1696_p1);

assign add_ln1147_fu_1149_p2 = (zext_ln1147_1_fu_1138_p1 + zext_ln1147_3_fu_1145_p1);

assign add_ln1148_1_fu_1206_p2 = (zext_ln1148_4_fu_1202_p1 + zext_ln1148_2_fu_1188_p1);

assign add_ln1148_2_fu_1386_p2 = (zext_ln1148_5_fu_1379_p1 + zext_ln1148_fu_1175_p1);

assign add_ln1148_3_fu_1396_p2 = (zext_ln1148_7_fu_1392_p1 + zext_ln1148_6_fu_1382_p1);

assign add_ln1148_4_fu_1563_p2 = (zext_ln1148_8_fu_1556_p1 + zext_ln1148_1_fu_1185_p1);

assign add_ln1148_5_fu_1573_p2 = (zext_ln1148_10_fu_1569_p1 + zext_ln1148_9_fu_1559_p1);

assign add_ln1148_6_fu_1740_p2 = (zext_ln1148_11_fu_1733_p1 + zext_ln1148_5_fu_1379_p1);

assign add_ln1148_7_fu_1750_p2 = (zext_ln1148_13_fu_1746_p1 + zext_ln1148_12_fu_1736_p1);

assign add_ln1148_fu_1196_p2 = (zext_ln1148_1_fu_1185_p1 + zext_ln1148_3_fu_1192_p1);

assign add_ln1149_1_fu_1253_p2 = (zext_ln1149_4_fu_1249_p1 + zext_ln1149_2_fu_1235_p1);

assign add_ln1149_2_fu_1426_p2 = (zext_ln1149_5_fu_1419_p1 + zext_ln1149_fu_1222_p1);

assign add_ln1149_3_fu_1436_p2 = (zext_ln1149_7_fu_1432_p1 + zext_ln1149_6_fu_1422_p1);

assign add_ln1149_4_fu_1603_p2 = (zext_ln1149_8_fu_1596_p1 + zext_ln1149_1_fu_1232_p1);

assign add_ln1149_5_fu_1613_p2 = (zext_ln1149_10_fu_1609_p1 + zext_ln1149_9_fu_1599_p1);

assign add_ln1149_6_fu_1780_p2 = (zext_ln1149_11_fu_1773_p1 + zext_ln1149_5_fu_1419_p1);

assign add_ln1149_7_fu_1790_p2 = (zext_ln1149_13_fu_1786_p1 + zext_ln1149_12_fu_1776_p1);

assign add_ln1149_fu_1243_p2 = (zext_ln1149_1_fu_1232_p1 + zext_ln1149_3_fu_1239_p1);

assign and_ln1144_1_fu_1122_p2 = (xor_ln1144_1_fu_1110_p2 & icmp_ln1144_3_fu_1116_p2);

assign and_ln1144_2_fu_1314_p2 = (xor_ln1144_2_fu_1302_p2 & icmp_ln1144_3_fu_1116_p2);

assign and_ln1144_3_fu_1320_p2 = (xor_ln1144_fu_1092_p2 & icmp_ln1144_5_fu_1308_p2);

assign and_ln1144_4_fu_1491_p2 = (xor_ln1144_3_fu_1479_p2 & icmp_ln1144_5_fu_1308_p2);

assign and_ln1144_5_fu_1497_p2 = (xor_ln1144_2_fu_1302_p2 & icmp_ln1144_7_fu_1485_p2);

assign and_ln1144_6_fu_1668_p2 = (xor_ln1144_4_fu_1656_p2 & icmp_ln1144_7_fu_1485_p2);

assign and_ln1144_7_fu_1674_p2 = (xor_ln1144_3_fu_1479_p2 & icmp_ln1144_9_fu_1662_p2);

assign and_ln1144_fu_1098_p2 = (xor_ln1144_fu_1092_p2 & icmp_ln1144_fu_1080_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op72_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((icmp_ln1159_reg_2072_pp0_iter4_reg == 1'd0) & (imgUnzip_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_1358 = ((icmp_ln1107_reg_2068 == 1'd1) & (icmp_ln1101_reg_2064 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_1362 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1107_reg_2068_pp0_iter1_reg == 1'd1) & (icmp_ln1101_reg_2064_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_1366 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1107_reg_2068_pp0_iter2_reg == 1'd1) & (icmp_ln1101_reg_2064_pp0_iter2_reg == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op72_read_state2 = ((icmp_ln1107_reg_2068 == 1'd1) & (icmp_ln1101_reg_2064 == 1'd1));
end

assign b_1_fu_1442_p4 = {{add_ln1149_3_fu_1436_p2[11:2]}};

assign b_2_fu_1619_p4 = {{add_ln1149_5_fu_1613_p2[11:2]}};

assign b_3_fu_1796_p4 = {{add_ln1149_7_fu_1790_p2[11:2]}};

assign b_s_fu_1259_p4 = {{add_ln1149_1_fu_1253_p2[11:2]}};

assign g_1_fu_1402_p4 = {{add_ln1148_3_fu_1396_p2[11:2]}};

assign g_2_fu_1579_p4 = {{add_ln1148_5_fu_1573_p2[11:2]}};

assign g_3_fu_1756_p4 = {{add_ln1148_7_fu_1750_p2[11:2]}};

assign g_s_fu_1212_p4 = {{add_ln1148_1_fu_1206_p2[11:2]}};

assign icmp_ln1101_fu_420_p2 = ((ap_sig_allocacmp_x_2 < loopWidth) ? 1'b1 : 1'b0);

assign icmp_ln1107_fu_426_p2 = ((ap_sig_allocacmp_x_2 < zext_ln1085_cast_fu_343_p1) ? 1'b1 : 1'b0);

assign icmp_ln1144_1_fu_1086_p2 = ((conv2_i_i722_out_i < conv2_i_i_1729_out_i) ? 1'b1 : 1'b0);

assign icmp_ln1144_2_fu_1104_p2 = ((p_0_0_0483_7718_out_i < conv2_i_i722_out_i) ? 1'b1 : 1'b0);

assign icmp_ln1144_3_fu_1116_p2 = ((conv2_i_i722_out_i < conv2_i_i_1729_out_i) ? 1'b1 : 1'b0);

assign icmp_ln1144_4_fu_1296_p2 = ((conv2_i_i_1729_out_i < conv2_i_i_2736_out_i) ? 1'b1 : 1'b0);

assign icmp_ln1144_5_fu_1308_p2 = ((conv2_i_i_1729_out_i < conv2_i_i_2736_out_i) ? 1'b1 : 1'b0);

assign icmp_ln1144_6_fu_1473_p2 = ((conv2_i_i_2736_out_i < p_0_0_0483_7743_fu_236) ? 1'b1 : 1'b0);

assign icmp_ln1144_7_fu_1485_p2 = ((conv2_i_i_2736_out_i < p_0_0_0483_7743_fu_236) ? 1'b1 : 1'b0);

assign icmp_ln1144_8_fu_1650_p2 = ((p_0_0_0483_7743_fu_236 < zext_ln1132_fu_960_p1) ? 1'b1 : 1'b0);

assign icmp_ln1144_9_fu_1662_p2 = ((p_0_0_0483_7743_fu_236 < zext_ln1132_fu_960_p1) ? 1'b1 : 1'b0);

assign icmp_ln1144_fu_1080_p2 = ((p_0_0_0483_7718_out_i < conv2_i_i722_out_i) ? 1'b1 : 1'b0);

assign icmp_ln1159_fu_432_p2 = ((ap_sig_allocacmp_x_2 == 17'd0) ? 1'b1 : 1'b0);

assign imgUnzip_din = {{{{{{{{{{{{select_ln1144_11_reg_2315}, {select_ln1144_9_reg_2305}}, {select_ln1144_10_reg_2310}}, {select_ln1144_8_reg_2300}}, {select_ln1144_6_reg_2290}}, {select_ln1144_7_reg_2295}}, {select_ln1144_5_reg_2285}}, {select_ln1144_3_reg_2275}}, {select_ln1144_4_reg_2280}}, {select_ln1144_2_reg_2270}}, {select_ln1144_reg_2260}}, {select_ln1144_1_reg_2265}};

assign lshr_ln1129_1_fu_749_p4 = {{p_0_0_0478695725_fu_204[9:1]}};

assign lshr_ln1129_2_fu_763_p4 = {{p_0_0_0478695725_fu_204[9:3]}};

assign lshr_ln1129_3_fu_870_p4 = {{p_0_0_0481_7746_fu_192[9:1]}};

assign lshr_ln1129_4_fu_884_p4 = {{p_0_0_0481_7746_fu_192[9:3]}};

assign lshr_ln1129_5_fu_963_p4 = {{p_0_0_0478_1701732_fu_216[9:1]}};

assign lshr_ln1129_6_fu_977_p4 = {{p_0_0_0478_1701732_fu_216[9:3]}};

assign lshr_ln1129_9_fu_1020_p4 = {{p_0_0_0478_2707739_fu_228[9:1]}};

assign lshr_ln1129_s_fu_1034_p4 = {{p_0_0_0478_2707739_fu_228[9:3]}};

assign lshr_ln1132_1_fu_1006_p4 = {{lum_1_fu_1000_p2[9:3]}};

assign lshr_ln1132_2_fu_1063_p4 = {{lum_2_fu_1057_p2[9:3]}};

assign lum_1_fu_1000_p2 = (add_ln1129_4_fu_994_p2 + zext_ln1129_10_fu_987_p1);

assign lum_2_fu_1057_p2 = (add_ln1129_7_fu_1051_p2 + zext_ln1129_14_fu_1044_p1);

assign lum_3_fu_907_p2 = (add_ln1129_10_fu_901_p2 + zext_ln1129_18_fu_894_p1);

assign lum_fu_786_p2 = (add_ln1129_1_fu_780_p2 + zext_ln1129_6_fu_773_p1);

assign or_ln1144_1_fu_1503_p2 = (and_ln1144_5_fu_1497_p2 | and_ln1144_4_fu_1491_p2);

assign or_ln1144_2_fu_1680_p2 = (and_ln1144_7_fu_1674_p2 | and_ln1144_6_fu_1668_p2);

assign or_ln1144_3_fu_1269_p2 = (and_ln1144_fu_1098_p2 | and_ln1144_1_fu_1122_p2);

assign or_ln1144_fu_1326_p2 = (and_ln1144_3_fu_1320_p2 | and_ln1144_2_fu_1314_p2);

assign p_0_0_0477697727_out = p_0_0_0477697727_load_reg_2102_pp0_iter3_reg;

assign p_0_0_0477_1703734_out = p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg;

assign p_0_0_0477_2709741_out = p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg;

assign p_0_0_0478695725_out = p_0_0_0478695725_load_reg_2159_pp0_iter3_reg;

assign p_0_0_0478_1701732_out = p_0_0_0478_1701732_load_reg_2219;

assign p_0_0_0478_2707739_out = p_0_0_0478_2707739_load_reg_2227;

assign p_0_0_0479699723_out = p_0_0_0479699723_load_reg_2094_pp0_iter3_reg;

assign p_0_0_0479_1705730_out = p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg;

assign p_0_0_0479_2711737_out = p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg;

assign p_0_0_0480_7748_out = p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg;

assign p_0_0_0481_7746_out = p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg;

assign p_0_0_0482_7744_out = p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg;

assign p_0_0_0483_7743_out = p_0_0_0483_7743_fu_236;

assign r_1_fu_1362_p4 = {{add_ln1147_3_fu_1356_p2[11:2]}};

assign r_2_fu_1539_p4 = {{add_ln1147_5_fu_1533_p2[11:2]}};

assign r_3_fu_1716_p4 = {{add_ln1147_7_fu_1710_p2[11:2]}};

assign r_s_fu_1165_p4 = {{add_ln1147_1_fu_1159_p2[11:2]}};

assign select_ln1144_10_fu_1813_p3 = ((or_ln1144_2_fu_1680_p2[0:0] == 1'b1) ? g_3_fu_1756_p4 : p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg);

assign select_ln1144_11_fu_1820_p3 = ((or_ln1144_2_fu_1680_p2[0:0] == 1'b1) ? r_3_fu_1716_p4 : p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg);

assign select_ln1144_1_fu_1282_p3 = ((or_ln1144_3_fu_1269_p2[0:0] == 1'b1) ? g_s_fu_1212_p4 : p_0_0_0478695725_load_reg_2159_pp0_iter3_reg);

assign select_ln1144_2_fu_1289_p3 = ((or_ln1144_3_fu_1269_p2[0:0] == 1'b1) ? r_s_fu_1165_p4 : p_0_0_0479699723_load_reg_2094_pp0_iter3_reg);

assign select_ln1144_3_fu_1452_p3 = ((or_ln1144_fu_1326_p2[0:0] == 1'b1) ? b_1_fu_1442_p4 : p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg);

assign select_ln1144_4_fu_1459_p3 = ((or_ln1144_fu_1326_p2[0:0] == 1'b1) ? g_1_fu_1402_p4 : p_0_0_0478_1701732_load_reg_2219);

assign select_ln1144_5_fu_1466_p3 = ((or_ln1144_fu_1326_p2[0:0] == 1'b1) ? r_1_fu_1362_p4 : p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg);

assign select_ln1144_6_fu_1629_p3 = ((or_ln1144_1_fu_1503_p2[0:0] == 1'b1) ? b_2_fu_1619_p4 : p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg);

assign select_ln1144_7_fu_1636_p3 = ((or_ln1144_1_fu_1503_p2[0:0] == 1'b1) ? g_2_fu_1579_p4 : p_0_0_0478_2707739_load_reg_2227);

assign select_ln1144_8_fu_1643_p3 = ((or_ln1144_1_fu_1503_p2[0:0] == 1'b1) ? r_2_fu_1539_p4 : p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg);

assign select_ln1144_9_fu_1806_p3 = ((or_ln1144_2_fu_1680_p2[0:0] == 1'b1) ? b_3_fu_1796_p4 : p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg);

assign select_ln1144_fu_1275_p3 = ((or_ln1144_3_fu_1269_p2[0:0] == 1'b1) ? b_s_fu_1259_p4 : p_0_0_0477697727_load_reg_2102_pp0_iter3_reg);

assign shl_ln1147_1_fu_1332_p3 = {{p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg}, {1'd0}};

assign shl_ln1147_2_fu_1509_p3 = {{p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg}, {1'd0}};

assign shl_ln1147_3_fu_1686_p3 = {{p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg}, {1'd0}};

assign shl_ln1148_1_fu_1372_p3 = {{p_0_0_0478_1701732_load_reg_2219}, {1'd0}};

assign shl_ln1148_2_fu_1549_p3 = {{p_0_0_0478_2707739_load_reg_2227}, {1'd0}};

assign shl_ln1148_3_fu_1726_p3 = {{p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg}, {1'd0}};

assign shl_ln1149_1_fu_1412_p3 = {{p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg}, {1'd0}};

assign shl_ln1149_2_fu_1589_p3 = {{p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg}, {1'd0}};

assign shl_ln1149_3_fu_1766_p3 = {{p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg}, {1'd0}};

assign shl_ln1_fu_1178_p3 = {{p_0_0_0478695725_load_reg_2159_pp0_iter3_reg}, {1'd0}};

assign shl_ln2_fu_1225_p3 = {{p_0_0_0477697727_load_reg_2102_pp0_iter3_reg}, {1'd0}};

assign shl_ln_fu_1131_p3 = {{p_0_0_0479699723_load_reg_2094_pp0_iter3_reg}, {1'd0}};

assign tmp_1_fu_663_p4 = {{p_0_0_0477697727_fu_208[9:3]}};

assign tmp_2_fu_802_p4 = {{p_0_0_0479_1705730_fu_212[9:2]}};

assign tmp_3_fu_816_p4 = {{p_0_0_0477_1703734_fu_220[9:3]}};

assign tmp_4_fu_836_p4 = {{p_0_0_0479_2711737_fu_224[9:2]}};

assign tmp_5_fu_850_p4 = {{p_0_0_0477_2709741_fu_232[9:3]}};

assign tmp_6_fu_683_p4 = {{p_0_0_0482_7744_fu_188[9:2]}};

assign tmp_7_fu_697_p4 = {{p_0_0_0480_7748_fu_196[9:3]}};

assign tmp_fu_649_p4 = {{p_0_0_0479699723_fu_200[9:2]}};

assign trunc_ln1109_fu_461_p1 = imgRgb_dout[9:0];

assign x_3_fu_438_p2 = (ap_sig_allocacmp_x_2 + 17'd4);

assign xor_ln1144_1_fu_1110_p2 = (icmp_ln1144_2_fu_1104_p2 ^ 1'd1);

assign xor_ln1144_2_fu_1302_p2 = (icmp_ln1144_4_fu_1296_p2 ^ 1'd1);

assign xor_ln1144_3_fu_1479_p2 = (icmp_ln1144_6_fu_1473_p2 ^ 1'd1);

assign xor_ln1144_4_fu_1656_p2 = (icmp_ln1144_8_fu_1650_p2 ^ 1'd1);

assign xor_ln1144_fu_1092_p2 = (icmp_ln1144_1_fu_1086_p2 ^ 1'd1);

assign zext_ln1085_cast_fu_343_p1 = zext_ln1085;

assign zext_ln1129_10_fu_987_p1 = lshr_ln1129_6_fu_977_p4;

assign zext_ln1129_11_fu_826_p1 = tmp_3_fu_816_p4;

assign zext_ln1129_12_fu_846_p1 = tmp_4_fu_836_p4;

assign zext_ln1129_13_fu_1030_p1 = lshr_ln1129_9_fu_1020_p4;

assign zext_ln1129_14_fu_1044_p1 = lshr_ln1129_s_fu_1034_p4;

assign zext_ln1129_15_fu_860_p1 = tmp_5_fu_850_p4;

assign zext_ln1129_16_fu_693_p1 = tmp_6_fu_683_p4;

assign zext_ln1129_17_fu_880_p1 = lshr_ln1129_3_fu_870_p4;

assign zext_ln1129_18_fu_894_p1 = lshr_ln1129_4_fu_884_p4;

assign zext_ln1129_19_fu_707_p1 = tmp_7_fu_697_p4;

assign zext_ln1129_1_fu_991_p1 = add_ln1129_3_reg_2245;

assign zext_ln1129_2_fu_1048_p1 = add_ln1129_6_reg_2250;

assign zext_ln1129_3_fu_898_p1 = add_ln1129_9_reg_2214;

assign zext_ln1129_4_fu_659_p1 = tmp_fu_649_p4;

assign zext_ln1129_5_fu_759_p1 = lshr_ln1129_1_fu_749_p4;

assign zext_ln1129_6_fu_773_p1 = lshr_ln1129_2_fu_763_p4;

assign zext_ln1129_7_fu_673_p1 = tmp_1_fu_663_p4;

assign zext_ln1129_8_fu_812_p1 = tmp_2_fu_802_p4;

assign zext_ln1129_9_fu_973_p1 = lshr_ln1129_5_fu_963_p4;

assign zext_ln1129_fu_777_p1 = add_ln1129_reg_2209;

assign zext_ln1132_1_fu_1016_p1 = lshr_ln1132_1_fu_1006_p4;

assign zext_ln1132_2_fu_1073_p1 = lshr_ln1132_2_fu_1063_p4;

assign zext_ln1132_3_fu_1077_p1 = lshr_ln1132_3_reg_2255;

assign zext_ln1132_fu_960_p1 = lshr_ln_reg_2240;

assign zext_ln1147_10_fu_1529_p1 = add_ln1147_4_fu_1523_p2;

assign zext_ln1147_11_fu_1693_p1 = p_0_0_0479699723_load_1_reg_2199_pp0_iter3_reg;

assign zext_ln1147_12_fu_1696_p1 = shl_ln1147_3_fu_1686_p3;

assign zext_ln1147_13_fu_1706_p1 = add_ln1147_6_fu_1700_p2;

assign zext_ln1147_1_fu_1138_p1 = p_0_0_0479_1705730_load_reg_2167_pp0_iter3_reg;

assign zext_ln1147_2_fu_1141_p1 = shl_ln_fu_1131_p3;

assign zext_ln1147_3_fu_1145_p1 = p_0_0_0482_7719_out_i;

assign zext_ln1147_4_fu_1155_p1 = add_ln1147_fu_1149_p2;

assign zext_ln1147_5_fu_1339_p1 = p_0_0_0479_2711737_load_reg_2183_pp0_iter3_reg;

assign zext_ln1147_6_fu_1342_p1 = shl_ln1147_1_fu_1332_p3;

assign zext_ln1147_7_fu_1352_p1 = add_ln1147_2_fu_1346_p2;

assign zext_ln1147_8_fu_1516_p1 = p_0_0_0482_7744_load_reg_2076_pp0_iter3_reg;

assign zext_ln1147_9_fu_1519_p1 = shl_ln1147_2_fu_1509_p3;

assign zext_ln1147_fu_1128_p1 = p_0_0_0479699723_load_reg_2094_pp0_iter3_reg;

assign zext_ln1148_10_fu_1569_p1 = add_ln1148_4_fu_1563_p2;

assign zext_ln1148_11_fu_1733_p1 = p_0_0_0478695725_load_1_reg_2235;

assign zext_ln1148_12_fu_1736_p1 = shl_ln1148_3_fu_1726_p3;

assign zext_ln1148_13_fu_1746_p1 = add_ln1148_6_fu_1740_p2;

assign zext_ln1148_1_fu_1185_p1 = p_0_0_0478_1701732_load_reg_2219;

assign zext_ln1148_2_fu_1188_p1 = shl_ln1_fu_1178_p3;

assign zext_ln1148_3_fu_1192_p1 = p_0_0_0481_7720_out_i;

assign zext_ln1148_4_fu_1202_p1 = add_ln1148_fu_1196_p2;

assign zext_ln1148_5_fu_1379_p1 = p_0_0_0478_2707739_load_reg_2227;

assign zext_ln1148_6_fu_1382_p1 = shl_ln1148_1_fu_1372_p3;

assign zext_ln1148_7_fu_1392_p1 = add_ln1148_2_fu_1386_p2;

assign zext_ln1148_8_fu_1556_p1 = p_0_0_0481_7746_load_reg_2150_pp0_iter3_reg;

assign zext_ln1148_9_fu_1559_p1 = shl_ln1148_2_fu_1549_p3;

assign zext_ln1148_fu_1175_p1 = p_0_0_0478695725_load_reg_2159_pp0_iter3_reg;

assign zext_ln1149_10_fu_1609_p1 = add_ln1149_4_fu_1603_p2;

assign zext_ln1149_11_fu_1773_p1 = p_0_0_0477697727_load_1_reg_2204_pp0_iter3_reg;

assign zext_ln1149_12_fu_1776_p1 = shl_ln1149_3_fu_1766_p3;

assign zext_ln1149_13_fu_1786_p1 = add_ln1149_6_fu_1780_p2;

assign zext_ln1149_1_fu_1232_p1 = p_0_0_0477_1703734_load_reg_2175_pp0_iter3_reg;

assign zext_ln1149_2_fu_1235_p1 = shl_ln2_fu_1225_p3;

assign zext_ln1149_3_fu_1239_p1 = p_0_0_0480_7721_out_i;

assign zext_ln1149_4_fu_1249_p1 = add_ln1149_fu_1243_p2;

assign zext_ln1149_5_fu_1419_p1 = p_0_0_0477_2709741_load_reg_2191_pp0_iter3_reg;

assign zext_ln1149_6_fu_1422_p1 = shl_ln1149_1_fu_1412_p3;

assign zext_ln1149_7_fu_1432_p1 = add_ln1149_2_fu_1426_p2;

assign zext_ln1149_8_fu_1596_p1 = p_0_0_0480_7748_load_reg_2085_pp0_iter3_reg;

assign zext_ln1149_9_fu_1599_p1 = shl_ln1149_2_fu_1589_p3;

assign zext_ln1149_fu_1222_p1 = p_0_0_0477697727_load_reg_2102_pp0_iter3_reg;

endmodule //system_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1101_2
